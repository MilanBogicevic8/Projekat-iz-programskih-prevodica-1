
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Wed Feb 07 07:57:09 CET 2024
//----------------------------------------------------

package rs.ac.bg.etf.pp1;

import java_cup.runtime.*;
import org.apache.log4j.*;
import rs.ac.bg.etf.pp1.ast.*;

/** CUP v0.10k generated parser.
  * @version Wed Feb 07 07:57:09 CET 2024
  */
public class MJParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MJParser() {super();}

  /** Constructor which sets the default scanner. */
  public MJParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\314\000\002\131\011\000\002\002\004\000\002\130" +
    "\003\000\002\003\004\000\002\003\002\000\002\144\004" +
    "\000\002\004\011\000\002\005\004\000\002\005\004\000" +
    "\002\005\004\000\002\005\002\000\002\006\011\000\002" +
    "\007\005\000\002\007\002\000\002\010\005\000\002\155" +
    "\003\000\002\155\003\000\002\155\003\000\002\011\006" +
    "\000\002\012\004\000\002\132\004\000\002\132\002\000" +
    "\002\013\005\000\002\013\002\000\002\014\004\000\002" +
    "\014\002\000\002\015\006\000\002\016\005\000\002\016" +
    "\002\000\002\017\006\000\002\020\005\000\002\020\002" +
    "\000\002\021\006\000\002\022\005\000\002\022\002\000" +
    "\002\133\006\000\002\134\005\000\002\030\003\000\002" +
    "\030\003\000\002\031\005\000\002\032\006\000\002\027" +
    "\002\000\002\026\002\000\002\156\004\000\002\156\002" +
    "\000\002\023\006\000\002\023\003\000\002\024\004\000" +
    "\002\024\002\000\002\025\006\000\002\025\003\000\002" +
    "\136\012\000\002\143\012\000\002\146\012\000\002\135" +
    "\004\000\002\135\004\000\002\034\003\000\002\034\002" +
    "\000\002\035\004\000\002\035\002\000\002\033\004\000" +
    "\002\033\002\000\002\036\004\000\002\036\002\000\002" +
    "\037\005\000\002\040\006\000\002\040\002\000\002\154" +
    "\006\000\002\154\003\000\002\041\003\000\002\041\003" +
    "\000\002\042\010\000\002\042\012\000\002\044\003\000" +
    "\002\045\002\000\002\046\003\000\002\157\004\000\002" +
    "\157\012\000\002\157\004\000\002\157\004\000\002\157" +
    "\005\000\002\157\007\000\002\157\010\000\002\157\005" +
    "\000\002\157\005\000\002\157\005\000\002\157\004\000" +
    "\002\157\004\000\002\157\007\000\002\157\011\000\002" +
    "\157\011\000\002\126\003\000\002\127\003\000\002\152" +
    "\005\000\002\153\003\000\002\125\003\000\002\122\003" +
    "\000\002\123\003\000\002\124\006\000\002\150\004\000" +
    "\002\151\004\000\002\101\015\000\002\102\002\000\002" +
    "\103\003\000\002\104\002\000\002\105\003\000\002\106" +
    "\002\000\002\107\002\000\002\043\004\000\002\043\002" +
    "\000\002\047\004\000\002\047\002\000\002\077\004\000" +
    "\002\077\002\000\002\100\005\000\002\100\002\000\002" +
    "\050\004\000\002\050\012\000\002\055\002\000\002\051" +
    "\004\000\002\051\006\000\002\051\003\000\002\051\003" +
    "\000\002\054\002\000\002\052\005\000\002\052\002\000" +
    "\002\053\004\000\002\053\002\000\002\056\002\000\002" +
    "\137\003\000\002\137\003\000\002\142\003\000\002\141" +
    "\004\000\002\145\004\000\002\140\004\000\002\140\002" +
    "\000\002\057\004\000\002\057\006\000\002\057\006\000" +
    "\002\061\002\000\002\060\005\000\002\062\003\000\002" +
    "\163\006\000\002\064\002\000\002\063\003\000\002\063" +
    "\002\000\002\165\005\000\002\165\002\000\002\160\003" +
    "\000\002\160\002\000\002\161\004\000\002\162\005\000" +
    "\002\162\002\000\002\070\003\000\002\164\006\000\002" +
    "\164\003\000\002\164\003\000\002\164\003\000\002\164" +
    "\003\000\002\164\006\000\002\164\005\000\002\147\002" +
    "\000\002\065\005\000\002\065\002\000\002\066\003\000" +
    "\002\066\002\000\002\067\005\000\002\067\005\000\002" +
    "\071\003\000\002\072\003\000\002\072\003\000\002\072" +
    "\003\000\002\076\003\000\002\073\004\000\002\074\005" +
    "\000\002\074\002\000\002\075\003\000\002\075\002\000" +
    "\002\166\004\000\002\110\004\000\002\110\002\000\002" +
    "\111\003\000\002\111\002\000\002\112\003\000\002\112" +
    "\003\000\002\112\003\000\002\112\003\000\002\112\003" +
    "\000\002\112\003\000\002\171\004\000\002\172\006\000" +
    "\002\172\002\000\002\113\002\000\002\167\004\000\002" +
    "\170\005\000\002\170\002\000\002\114\003\000\002\114" +
    "\003\000\002\115\006\000\002\116\004\000\002\116\003" +
    "\000\002\117\003\000\002\120\004\000\002\120\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0158\000\004\004\005\001\002\000\004\002\u015a\001" +
    "\002\000\004\065\006\001\002\000\014\006\uffff\010\uffff" +
    "\024\uffff\055\uffff\065\uffff\001\002\000\014\006\ufffd\010" +
    "\ufffd\024\ufffd\055\ufffd\065\ufffd\001\002\000\014\006\ufff7" +
    "\010\ufff7\024\012\055\ufff7\065\ufff7\001\002\000\004\055" +
    "\u0154\001\002\000\004\065\u0153\001\002\000\012\006\024" +
    "\010\025\055\016\065\017\001\002\000\014\006\ufffe\010" +
    "\ufffe\024\ufffe\055\ufffe\065\ufffe\001\002\000\004\065\066" +
    "\001\002\000\010\016\uffc6\056\uffc6\065\uffc6\001\002\000" +
    "\014\046\u0140\051\uffbd\053\uffbd\055\uffbd\065\uffbd\001\002" +
    "\000\004\055\050\001\002\000\012\006\ufff9\010\ufff9\055" +
    "\ufff9\065\ufff9\001\002\000\012\006\ufff8\010\ufff8\055\ufff8" +
    "\065\ufff8\001\002\000\012\006\ufffa\010\ufffa\055\ufffa\065" +
    "\ufffa\001\002\000\004\065\044\001\002\000\004\065\017" +
    "\001\002\000\004\065\027\001\002\000\004\042\030\001" +
    "\002\000\010\064\031\066\033\067\034\001\002\000\006" +
    "\045\ufff2\047\ufff2\001\002\000\006\045\ufff4\047\ufff4\001" +
    "\002\000\006\045\ufff0\047\ufff0\001\002\000\006\045\ufff1" +
    "\047\ufff1\001\002\000\006\045\037\047\036\001\002\000" +
    "\004\065\040\001\002\000\012\006\ufff6\010\ufff6\055\ufff6" +
    "\065\ufff6\001\002\000\004\042\042\001\002\000\006\045" +
    "\ufff5\047\ufff5\001\002\000\010\064\031\066\033\067\034" +
    "\001\002\000\006\045\ufff3\047\ufff3\001\002\000\006\017" +
    "\045\055\uffd5\001\002\000\004\065\017\001\002\000\004" +
    "\055\uffdd\001\002\000\004\055\uffd6\001\002\000\012\023" +
    "\uffd7\055\uffd7\056\uffd7\065\uffd7\001\002\000\004\056\uffdc" +
    "\001\002\000\004\056\u013f\001\002\000\012\023\060\055" +
    "\uffd1\056\uffd1\065\uffd1\001\002\000\012\023\uffd3\055\uffd3" +
    "\056\uffd3\065\uffd3\001\002\000\004\056\uffdb\001\002\000" +
    "\010\055\uffd8\056\uffd8\065\017\001\002\000\012\023\u0115" +
    "\055\uffd1\056\uffd1\065\uffd1\001\002\000\006\055\062\065" +
    "\017\001\002\000\012\023\uff39\055\uff39\056\uff39\065\uff39" +
    "\001\002\000\034\005\uff94\011\uff94\013\uff94\014\uff94\015" +
    "\uff94\020\uff94\022\uff94\053\uff94\055\uff94\056\uff94\061\uff94" +
    "\063\uff94\065\uff94\001\002\000\004\065\066\001\002\000" +
    "\012\023\uffd7\055\uffd7\056\uffd7\065\uffd7\001\002\000\012" +
    "\023\uffd4\055\uffd4\056\uffd4\065\uffd4\001\002\000\012\045" +
    "\uffec\047\uffec\052\uffec\053\075\001\002\000\006\045\uffe2" +
    "\047\uffe2\001\002\000\006\045\072\047\071\001\002\000" +
    "\004\065\066\001\002\000\012\023\uffe4\055\uffe4\056\uffe4" +
    "\065\uffe4\001\002\000\006\045\uffe3\047\uffe3\001\002\000" +
    "\010\045\uffee\047\uffee\052\uffee\001\002\000\004\054\076" +
    "\001\002\000\010\045\uffed\047\uffed\052\uffed\001\002\000" +
    "\034\005\122\011\113\013\124\014\101\015\111\020\102" +
    "\022\131\053\uff8b\055\114\056\106\061\110\063\117\065" +
    "\104\001\002\000\012\042\u010b\043\u010e\044\u010c\051\uff86" +
    "\001\002\000\004\051\u0106\001\002\000\004\045\u0105\001" +
    "\002\000\004\051\372\001\002\000\020\042\uff7e\043\uff7e" +
    "\044\uff7e\046\223\050\370\051\uff7e\053\uff7e\001\002\000" +
    "\004\045\367\001\002\000\012\023\uff3b\055\uff3b\056\uff3b" +
    "\065\uff3b\001\002\000\032\005\122\011\113\013\124\014" +
    "\101\015\111\020\102\022\131\053\uff8b\055\114\061\110" +
    "\063\117\065\104\001\002\000\004\051\uffa2\001\002\000" +
    "\022\012\uff70\026\146\045\uff6c\051\uff70\064\uff70\065\uff70" +
    "\066\uff70\067\uff70\001\002\000\004\053\347\001\002\000" +
    "\004\051\335\001\002\000\034\005\uff94\011\uff94\013\uff94" +
    "\014\uff94\015\uff94\020\uff94\022\uff94\053\uff94\055\uff94\056" +
    "\uff94\061\uff94\063\uff94\065\uff94\001\002\000\032\005\122" +
    "\011\113\013\124\014\101\015\111\020\102\022\131\053" +
    "\uff8b\055\114\061\110\063\117\065\104\001\002\000\004" +
    "\065\325\001\002\000\032\005\uffa6\011\uffa6\013\uffa6\014" +
    "\uffa6\015\uffa6\020\uffa6\022\uffa6\053\uffa6\055\uffa6\061\uffa6" +
    "\063\uffa6\065\uffa6\001\002\000\004\051\315\001\002\000" +
    "\054\025\uff7f\026\uff7f\027\uff7f\030\uff7f\031\uff7f\032\uff7f" +
    "\033\uff7f\034\uff7f\035\uff7f\036\uff7f\037\uff7f\040\uff7f\041" +
    "\uff7f\042\uff7f\043\uff7f\044\uff7f\045\uff7f\047\uff7f\051\uff7f" +
    "\052\uff7f\054\uff7f\001\002\000\004\045\314\001\002\000" +
    "\040\005\uffbb\007\uffbb\011\uffbb\013\uffbb\014\uffbb\015\uffbb" +
    "\020\uffbb\022\uffbb\052\uffbb\053\uffbb\055\uffbb\056\uffbb\061" +
    "\uffbb\063\uffbb\065\uffbb\001\002\000\004\051\305\001\002" +
    "\000\032\005\122\011\113\013\124\014\101\015\111\020" +
    "\102\022\131\053\uff8b\055\114\061\110\063\117\065\104" +
    "\001\002\000\034\005\uff95\011\uff95\013\uff95\014\uff95\015" +
    "\uff95\020\uff95\022\uff95\053\uff95\055\uff95\056\uff95\061\uff95" +
    "\063\uff95\065\uff95\001\002\000\004\051\226\001\002\000" +
    "\060\025\uff7a\026\uff7a\027\uff7a\030\uff7a\031\uff7a\032\uff7a" +
    "\033\uff7a\034\uff7a\035\uff7a\036\uff7a\037\uff7a\040\uff7a\041" +
    "\uff7a\042\uff7a\043\uff7a\044\uff7a\045\uff7a\047\uff7a\050\uff7a" +
    "\051\uff7a\052\uff7a\053\uff7a\054\uff7a\001\002\000\004\051" +
    "\uff9a\001\002\000\036\005\uffbc\011\uffbc\013\uffbc\014\uffbc" +
    "\015\uffbc\020\uffbc\022\uffbc\052\uffbc\053\uffbc\055\uffbc\056" +
    "\uffbc\061\uffbc\063\uffbc\065\uffbc\001\002\000\054\025\uff80" +
    "\026\uff80\027\uff80\030\uff80\031\uff80\032\uff80\033\uff80\034" +
    "\uff80\035\uff80\036\uff80\037\uff80\040\uff80\041\uff80\042\uff80" +
    "\043\uff80\044\uff80\045\uff80\047\uff80\051\uff80\052\uff80\054" +
    "\uff80\001\002\000\060\025\uff7d\026\uff7d\027\uff7d\030\uff7d" +
    "\031\uff7d\032\uff7d\033\uff7d\034\uff7d\035\uff7d\036\uff7d\037" +
    "\uff7d\040\uff7d\041\uff7d\042\uff7d\043\uff7d\044\uff7d\045\uff7d" +
    "\047\uff7d\050\137\051\uff7d\052\uff7d\053\uff76\054\uff7d\001" +
    "\002\000\060\025\uff7b\026\uff7b\027\uff7b\030\uff7b\031\uff7b" +
    "\032\uff7b\033\uff7b\034\uff7b\035\uff7b\036\uff7b\037\uff7b\040" +
    "\uff7b\041\uff7b\042\uff7b\043\uff7b\044\uff7b\045\uff7b\047\uff7b" +
    "\050\uff7b\051\uff7b\052\uff7b\053\uff7b\054\uff7b\001\002\000" +
    "\004\053\144\001\002\000\006\060\141\065\140\001\002" +
    "\000\060\025\uff79\026\uff79\027\uff79\030\uff79\031\uff79\032" +
    "\uff79\033\uff79\034\uff79\035\uff79\036\uff79\037\uff79\040\uff79" +
    "\041\uff79\042\uff79\043\uff79\044\uff79\045\uff79\047\uff79\050" +
    "\uff79\051\uff79\052\uff79\053\uff79\054\uff79\001\002\000\004" +
    "\051\142\001\002\000\004\052\143\001\002\000\060\025" +
    "\uff77\026\uff77\027\uff77\030\uff77\031\uff77\032\uff77\033\uff77" +
    "\034\uff77\035\uff77\036\uff77\037\uff77\040\uff77\041\uff77\042" +
    "\uff77\043\uff77\044\uff77\045\uff77\047\uff77\050\uff77\051\uff77" +
    "\052\uff77\053\uff77\054\uff77\001\002\000\020\012\uff70\026" +
    "\146\051\uff70\064\uff70\065\uff70\066\uff70\067\uff70\001\002" +
    "\000\004\054\225\001\002\000\016\012\uff71\051\uff71\064" +
    "\uff71\065\uff71\066\uff71\067\uff71\001\002\000\016\012\151" +
    "\051\160\064\157\065\150\066\154\067\153\001\002\000" +
    "\062\025\uff7e\026\uff7e\027\uff7e\030\uff7e\031\uff7e\032\uff7e" +
    "\033\uff7e\034\uff7e\035\uff7e\036\uff7e\037\uff7e\040\uff7e\041" +
    "\uff7e\042\uff7e\043\uff7e\044\uff7e\045\uff7e\046\223\047\uff7e" +
    "\050\uff7e\051\uff7e\052\uff7e\053\uff7e\054\uff7e\001\002\000" +
    "\004\065\017\001\002\000\046\025\uff66\026\uff66\027\uff66" +
    "\030\uff66\031\uff66\032\uff66\033\uff66\034\uff66\035\uff66\036" +
    "\uff66\037\uff66\040\uff66\041\uff66\045\uff66\047\uff66\051\uff68" +
    "\052\uff66\054\uff66\001\002\000\044\025\uff64\026\uff64\027" +
    "\uff64\030\uff64\031\uff64\032\uff64\033\uff64\034\uff64\035\uff64" +
    "\036\uff64\037\uff64\040\uff64\041\uff64\045\uff64\047\uff64\052" +
    "\uff64\054\uff64\001\002\000\044\025\uff63\026\uff63\027\uff63" +
    "\030\uff63\031\uff63\032\uff63\033\uff63\034\uff63\035\uff63\036" +
    "\uff63\037\uff63\040\uff63\041\uff63\045\uff63\047\uff63\052\uff63" +
    "\054\uff63\001\002\000\036\025\uff72\026\uff72\032\uff72\033" +
    "\uff72\034\uff72\035\uff72\036\uff72\037\uff72\040\uff72\041\uff72" +
    "\045\uff72\047\uff72\052\uff72\054\uff72\001\002\000\044\025" +
    "\uff69\026\uff69\027\uff69\030\uff69\031\uff69\032\uff69\033\uff69" +
    "\034\uff69\035\uff69\036\uff69\037\uff69\040\uff69\041\uff69\045" +
    "\uff69\047\uff69\052\uff69\054\uff69\001\002\000\044\025\uff65" +
    "\026\uff65\027\uff65\030\uff65\031\uff65\032\uff65\033\uff65\034" +
    "\uff65\035\uff65\036\uff65\037\uff65\040\uff65\041\uff65\045\uff65" +
    "\047\uff65\052\uff65\054\uff65\001\002\000\020\012\uff70\026" +
    "\146\051\uff70\064\uff70\065\uff70\066\uff70\067\uff70\001\002" +
    "\000\004\051\162\001\002\000\022\012\uff70\026\146\051" +
    "\uff70\052\uff5c\064\uff70\065\uff70\066\uff70\067\uff70\001\002" +
    "\000\004\052\172\001\002\000\004\052\uff5d\001\002\000" +
    "\006\047\uff55\052\uff55\001\002\000\006\047\uff52\052\uff52" +
    "\001\002\000\006\047\170\052\uff54\001\002\000\020\012" +
    "\uff70\026\146\051\uff70\064\uff70\065\uff70\066\uff70\067\uff70" +
    "\001\002\000\006\047\uff53\052\uff53\001\002\000\044\025" +
    "\uff67\026\uff67\027\uff67\030\uff67\031\uff67\032\uff67\033\uff67" +
    "\034\uff67\035\uff67\036\uff67\037\uff67\040\uff67\041\uff67\045" +
    "\uff67\047\uff67\052\uff67\054\uff67\001\002\000\004\052\174" +
    "\001\002\000\044\025\uff61\026\uff61\027\uff61\030\uff61\031" +
    "\uff61\032\uff61\033\uff61\034\uff61\035\uff61\036\uff61\037\uff61" +
    "\040\uff61\041\uff61\045\uff61\047\uff61\052\uff61\054\uff61\001" +
    "\002\000\044\025\uff6b\026\uff6b\027\177\030\200\031\176" +
    "\032\uff6b\033\uff6b\034\uff6b\035\uff6b\036\uff6b\037\uff6b\040" +
    "\uff6b\041\uff6b\045\uff6b\047\uff6b\052\uff6b\054\uff6b\001\002" +
    "\000\016\012\uff56\051\uff56\064\uff56\065\uff56\066\uff56\067" +
    "\uff56\001\002\000\016\012\uff58\051\uff58\064\uff58\065\uff58" +
    "\066\uff58\067\uff58\001\002\000\016\012\uff57\051\uff57\064" +
    "\uff57\065\uff57\066\uff57\067\uff57\001\002\000\016\012\151" +
    "\051\160\064\157\065\150\066\154\067\153\001\002\000" +
    "\044\025\uff6a\026\uff6a\027\uff6a\030\uff6a\031\uff6a\032\uff6a" +
    "\033\uff6a\034\uff6a\035\uff6a\036\uff6a\037\uff6a\040\uff6a\041" +
    "\uff6a\045\uff6a\047\uff6a\052\uff6a\054\uff6a\001\002\000\036" +
    "\025\uff6e\026\uff6e\032\uff6e\033\uff6e\034\uff6e\035\uff6e\036" +
    "\uff6e\037\uff6e\040\uff6e\041\uff6e\045\uff6e\047\uff6e\052\uff6e" +
    "\054\uff6e\001\002\000\036\025\205\026\206\032\uff73\033" +
    "\uff73\034\uff73\035\uff73\036\uff73\037\uff73\040\uff73\041\uff73" +
    "\045\uff73\047\uff73\052\uff73\054\uff73\001\002\000\016\012" +
    "\uff3d\051\uff3d\064\uff3d\065\uff3d\066\uff3d\067\uff3d\001\002" +
    "\000\016\012\uff3c\051\uff3c\064\uff3c\065\uff3c\066\uff3c\067" +
    "\uff3c\001\002\000\016\012\151\051\160\064\157\065\150" +
    "\066\154\067\153\001\002\000\036\025\uff6f\026\uff6f\032" +
    "\uff6f\033\uff6f\034\uff6f\035\uff6f\036\uff6f\037\uff6f\040\uff6f" +
    "\041\uff6f\045\uff6f\047\uff6f\052\uff6f\054\uff6f\001\002\000" +
    "\006\051\uff60\053\uff60\001\002\000\006\051\215\053\213" +
    "\001\002\000\020\012\uff70\026\146\051\uff70\064\uff70\065" +
    "\uff70\066\uff70\067\uff70\001\002\000\044\025\uff62\026\uff62" +
    "\027\uff62\030\uff62\031\uff62\032\uff62\033\uff62\034\uff62\035" +
    "\uff62\036\uff62\037\uff62\040\uff62\041\uff62\045\uff62\047\uff62" +
    "\052\uff62\054\uff62\001\002\000\022\012\uff70\026\146\051" +
    "\uff70\052\uff50\064\uff70\065\uff70\066\uff70\067\uff70\001\002" +
    "\000\004\052\uff51\001\002\000\004\052\220\001\002\000" +
    "\044\025\uff5a\026\uff5a\027\uff5a\030\uff5a\031\uff5a\032\uff5a" +
    "\033\uff5a\034\uff5a\035\uff5a\036\uff5a\037\uff5a\040\uff5a\041" +
    "\uff5a\045\uff5a\047\uff5a\052\uff5a\054\uff5a\001\002\000\004" +
    "\054\222\001\002\000\044\025\uff5b\026\uff5b\027\uff5b\030" +
    "\uff5b\031\uff5b\032\uff5b\033\uff5b\034\uff5b\035\uff5b\036\uff5b" +
    "\037\uff5b\040\uff5b\041\uff5b\045\uff5b\047\uff5b\052\uff5b\054" +
    "\uff5b\001\002\000\004\046\224\001\002\000\004\065\uff75" +
    "\001\002\000\060\025\uff78\026\uff78\027\uff78\030\uff78\031" +
    "\uff78\032\uff78\033\uff78\034\uff78\035\uff78\036\uff78\037\uff78" +
    "\040\uff78\041\uff78\042\uff78\043\uff78\044\uff78\045\uff78\047" +
    "\uff78\050\uff78\051\uff78\052\uff78\053\uff78\054\uff78\001\002" +
    "\000\010\045\uff90\053\uff8b\065\227\001\002\000\020\042" +
    "\uff7e\043\uff7e\044\uff7e\046\264\050\uff7e\051\uff7e\053\uff7e" +
    "\001\002\000\010\045\uff8e\047\uff8e\052\uff8e\001\002\000" +
    "\004\045\uff99\001\002\000\004\065\234\001\002\000\032" +
    "\005\uff9f\011\uff9f\013\uff9f\014\uff9f\015\uff9f\020\uff9f\022" +
    "\uff9f\053\uff9f\055\uff9f\061\uff9f\063\uff9f\065\uff9f\001\002" +
    "\000\004\052\235\001\002\000\032\005\uff9d\011\uff9d\013" +
    "\uff9d\014\uff9d\015\uff9d\020\uff9d\022\uff9d\053\uff9d\055\uff9d" +
    "\061\uff9d\063\uff9d\065\uff9d\001\002\000\004\045\237\001" +
    "\002\000\022\012\uff70\026\146\045\uff4b\051\uff70\064\uff70" +
    "\065\uff70\066\uff70\067\uff70\001\002\000\004\045\uff97\001" +
    "\002\000\026\032\247\033\251\034\246\035\245\036\244" +
    "\037\250\040\uff4d\041\uff4d\045\uff4d\052\uff4d\001\002\000" +
    "\004\045\uff4c\001\002\000\012\040\uff4f\041\uff4f\045\uff4f" +
    "\052\uff4f\001\002\000\020\012\uff46\026\uff46\051\uff46\064" +
    "\uff46\065\uff46\066\uff46\067\uff46\001\002\000\020\012\uff47" +
    "\026\uff47\051\uff47\064\uff47\065\uff47\066\uff47\067\uff47\001" +
    "\002\000\020\012\uff48\026\uff48\051\uff48\064\uff48\065\uff48" +
    "\066\uff48\067\uff48\001\002\000\020\012\uff4a\026\uff4a\051" +
    "\uff4a\064\uff4a\065\uff4a\066\uff4a\067\uff4a\001\002\000\020" +
    "\012\uff45\026\uff45\051\uff45\064\uff45\065\uff45\066\uff45\067" +
    "\uff45\001\002\000\020\012\uff49\026\uff49\051\uff49\064\uff49" +
    "\065\uff49\066\uff49\067\uff49\001\002\000\020\012\uff70\026" +
    "\146\051\uff70\064\uff70\065\uff70\066\uff70\067\uff70\001\002" +
    "\000\012\040\uff4e\041\uff4e\045\uff4e\052\uff4e\001\002\000" +
    "\004\045\255\001\002\000\010\052\uff90\053\uff8b\065\150" +
    "\001\002\000\004\052\uff96\001\002\000\004\052\260\001" +
    "\002\000\032\005\uff9c\011\uff9c\013\uff9c\014\uff9c\015\uff9c" +
    "\020\uff9c\022\uff9c\053\uff9c\055\uff9c\061\uff9c\063\uff9c\065" +
    "\uff9c\001\002\000\010\045\uff91\047\262\052\uff91\001\002" +
    "\000\006\053\uff8b\065\150\001\002\000\010\045\uff8f\047" +
    "\uff8f\052\uff8f\001\002\000\006\046\224\065\uff9e\001\002" +
    "\000\004\061\266\001\002\000\004\051\267\001\002\000" +
    "\020\012\uff70\026\146\051\uff70\064\uff70\065\uff70\066\uff70" +
    "\067\uff70\001\002\000\006\041\uff42\052\uff42\001\002\000" +
    "\004\052\276\001\002\000\010\040\uff3e\041\uff3e\052\uff3e" +
    "\001\002\000\010\040\274\041\uff40\052\uff40\001\002\000" +
    "\020\012\uff70\026\146\051\uff70\064\uff70\065\uff70\066\uff70" +
    "\067\uff70\001\002\000\010\040\uff3f\041\uff3f\052\uff3f\001" +
    "\002\000\004\045\uffa5\001\002\000\004\045\300\001\002" +
    "\000\040\005\uffa7\007\uffa7\011\uffa7\013\uffa7\014\uffa7\015" +
    "\uffa7\020\uffa7\022\uffa7\052\uffa7\053\uffa7\055\uffa7\056\uffa7" +
    "\061\uffa7\063\uffa7\065\uffa7\001\002\000\006\041\uff41\052" +
    "\uff44\001\002\000\004\041\303\001\002\000\020\012\uff70" +
    "\026\146\051\uff70\064\uff70\065\uff70\066\uff70\067\uff70\001" +
    "\002\000\006\041\uff43\052\uff43\001\002\000\020\012\uff70" +
    "\026\146\051\uff70\064\uff70\065\uff70\066\uff70\067\uff70\001" +
    "\002\000\006\047\307\052\uff92\001\002\000\004\064\313" +
    "\001\002\000\004\052\311\001\002\000\004\045\312\001" +
    "\002\000\040\005\uffaf\007\uffaf\011\uffaf\013\uffaf\014\uffaf" +
    "\015\uffaf\020\uffaf\022\uffaf\052\uffaf\053\uffaf\055\uffaf\056" +
    "\uffaf\061\uffaf\063\uffaf\065\uffaf\001\002\000\004\052\uff93" +
    "\001\002\000\040\005\uffb3\007\uffb3\011\uffb3\013\uffb3\014" +
    "\uffb3\015\uffb3\020\uffb3\022\uffb3\052\uffb3\053\uffb3\055\uffb3" +
    "\056\uffb3\061\uffb3\063\uffb3\065\uffb3\001\002\000\004\065" +
    "\317\001\002\000\004\057\320\001\002\000\004\057\uffa3" +
    "\001\002\000\032\005\122\011\113\013\124\014\101\015" +
    "\111\020\102\022\131\053\uff8b\055\114\061\110\063\117" +
    "\065\104\001\002\000\004\052\322\001\002\000\004\045" +
    "\323\001\002\000\040\005\uffa8\007\uffa8\011\uffa8\013\uffa8" +
    "\014\uffa8\015\uffa8\020\uffa8\022\uffa8\052\uffa8\053\uffa8\055" +
    "\uffa8\056\uffa8\061\uffa8\063\uffa8\065\uffa8\001\002\000\054" +
    "\025\uff7c\026\uff7c\027\uff7c\030\uff7c\031\uff7c\032\uff7c\033" +
    "\uff7c\034\uff7c\035\uff7c\036\uff7c\037\uff7c\040\uff7c\041\uff7c" +
    "\042\uff7c\043\uff7c\044\uff7c\045\uff7c\047\uff7c\051\uff7c\052" +
    "\uff7c\054\uff7c\001\002\000\060\025\uff7e\026\uff7e\027\uff7e" +
    "\030\uff7e\031\uff7e\032\uff7e\033\uff7e\034\uff7e\035\uff7e\036" +
    "\uff7e\037\uff7e\040\uff7e\041\uff7e\042\uff7e\043\uff7e\044\uff7e" +
    "\045\uff7e\047\uff7e\050\uff7e\051\uff7e\052\uff7e\053\uff7e\054" +
    "\uff7e\001\002\000\040\005\uff9b\007\uff9b\011\uff9b\013\uff9b" +
    "\014\uff9b\015\uff9b\020\uff9b\022\uff9b\052\uff9b\053\uff9b\055" +
    "\uff9b\056\uff9b\061\uff9b\063\uff9b\065\uff9b\001\002\000\040" +
    "\005\uff9b\007\uff9b\011\uff9b\013\uff9b\014\uff9b\015\uff9b\020" +
    "\uff9b\022\uff9b\052\uff9b\053\uff9b\055\uff9b\056\uff9b\061\uff9b" +
    "\063\uff9b\065\uff9b\001\002\000\040\005\uffae\007\uffae\011" +
    "\uffae\013\uffae\014\uffae\015\uffae\020\uffae\022\uffae\052\uffae" +
    "\053\uffae\055\uffae\056\uffae\061\uffae\063\uffae\065\uffae\001" +
    "\002\000\040\005\uffad\007\uffad\011\uffad\013\uffad\014\uffad" +
    "\015\uffad\020\uffad\022\uffad\052\uffad\053\uffad\055\uffad\056" +
    "\uffad\061\uffad\063\uffad\065\uffad\001\002\000\034\005\122" +
    "\011\113\013\124\014\101\015\111\020\102\022\131\053" +
    "\uff8b\055\114\056\333\061\110\063\117\065\104\001\002" +
    "\000\040\005\uffac\007\uffac\011\uffac\013\uffac\014\uffac\015" +
    "\uffac\020\uffac\022\uffac\052\uffac\053\uffac\055\uffac\056\uffac" +
    "\061\uffac\063\uffac\065\uffac\001\002\000\020\012\uff70\026" +
    "\146\051\uff70\064\uff70\065\uff70\066\uff70\067\uff70\001\002" +
    "\000\020\012\uffb8\026\uffb8\051\uffb8\064\uffb8\065\uffb8\066" +
    "\uffb8\067\uffb8\001\002\000\004\052\uffb7\001\002\000\004" +
    "\052\340\001\002\000\032\005\122\011\113\013\124\014" +
    "\101\015\111\020\102\022\131\053\uff8b\055\114\061\110" +
    "\063\117\065\104\001\002\000\040\005\uffba\007\uffba\011" +
    "\uffba\013\uffba\014\uffba\015\uffba\020\uffba\022\uffba\052\uffba" +
    "\053\uffba\055\uffba\056\uffba\061\uffba\063\uffba\065\uffba\001" +
    "\002\000\040\005\uffbc\007\343\011\uffbc\013\uffbc\014\uffbc" +
    "\015\uffbc\020\uffbc\022\uffbc\052\uffbc\053\uffbc\055\uffbc\056" +
    "\uffbc\061\uffbc\063\uffbc\065\uffbc\001\002\000\032\005\uffb6" +
    "\011\uffb6\013\uffb6\014\uffb6\015\uffb6\020\uffb6\022\uffb6\053" +
    "\uffb6\055\uffb6\061\uffb6\063\uffb6\065\uffb6\001\002\000\032" +
    "\005\122\011\113\013\124\014\101\015\111\020\102\022" +
    "\131\053\uff8b\055\114\061\110\063\117\065\104\001\002" +
    "\000\040\005\uffb9\007\uffb9\011\uffb9\013\uffb9\014\uffb9\015" +
    "\uffb9\020\uffb9\022\uffb9\052\uffb9\053\uffb9\055\uffb9\056\uffb9" +
    "\061\uffb9\063\uffb9\065\uffb9\001\002\000\040\005\uffb4\007" +
    "\uffb4\011\uffb4\013\uffb4\014\uffb4\015\uffb4\020\uffb4\022\uffb4" +
    "\052\uffb4\053\uffb4\055\uffb4\056\uffb4\061\uffb4\063\uffb4\065" +
    "\uffb4\001\002\000\010\027\uff84\047\uff84\065\uff84\001\002" +
    "\000\010\027\351\047\uff82\065\150\001\002\000\004\065" +
    "\150\001\002\000\004\047\355\001\002\000\004\047\uff81" +
    "\001\002\000\004\047\uff83\001\002\000\010\027\uff85\047" +
    "\uff85\065\uff85\001\002\000\004\054\357\001\002\000\004" +
    "\042\360\001\002\000\004\065\150\001\002\000\010\045" +
    "\uff8c\047\uff8c\052\uff8c\001\002\000\004\045\uff6d\001\002" +
    "\000\004\045\364\001\002\000\040\005\uffb1\007\uffb1\011" +
    "\uffb1\013\uffb1\014\uffb1\015\uffb1\020\uffb1\022\uffb1\052\uffb1" +
    "\053\uffb1\055\uffb1\056\uffb1\061\uffb1\063\uffb1\065\uffb1\001" +
    "\002\000\040\005\uffaa\007\uffaa\011\uffaa\013\uffaa\014\uffaa" +
    "\015\uffaa\020\uffaa\022\uffaa\052\uffaa\053\uffaa\055\uffaa\056" +
    "\uffaa\061\uffaa\063\uffaa\065\uffaa\001\002\000\040\005\uffab" +
    "\007\uffab\011\uffab\013\uffab\014\uffab\015\uffab\020\uffab\022" +
    "\uffab\052\uffab\053\uffab\055\uffab\056\uffab\061\uffab\063\uffab" +
    "\065\uffab\001\002\000\040\005\uffb5\007\uffb5\011\uffb5\013" +
    "\uffb5\014\uffb5\015\uffb5\020\uffb5\022\uffb5\052\uffb5\053\uffb5" +
    "\055\uffb5\056\uffb5\061\uffb5\063\uffb5\065\uffb5\001\002\000" +
    "\004\062\371\001\002\000\004\051\uffa4\001\002\000\020" +
    "\012\uff70\026\146\051\uff70\064\uff70\065\uff70\066\uff70\067" +
    "\uff70\001\002\000\004\052\374\001\002\000\032\005\122" +
    "\011\375\013\124\014\101\015\111\020\102\022\131\053" +
    "\uff8b\055\114\061\110\063\117\065\104\001\002\000\004" +
    "\051\335\001\002\000\040\005\uffa9\007\uffa9\011\uffa9\013" +
    "\uffa9\014\uffa9\015\uffa9\020\uffa9\022\uffa9\052\uffa9\053\uffa9" +
    "\055\uffa9\056\uffa9\061\uffa9\063\uffa9\065\uffa9\001\002\000" +
    "\020\012\uff70\026\146\051\uff70\064\uff70\065\uff70\066\uff70" +
    "\067\uff70\001\002\000\004\052\uffb7\001\002\000\004\052" +
    "\u0102\001\002\000\032\005\122\011\375\013\124\014\101" +
    "\015\111\020\102\022\131\053\uff8b\055\114\061\110\063" +
    "\117\065\104\001\002\000\004\007\343\001\002\000\032" +
    "\005\122\011\375\013\124\014\101\015\111\020\102\022" +
    "\131\053\uff8b\055\114\061\110\063\117\065\104\001\002" +
    "\000\040\005\uffb2\007\uffb2\011\uffb2\013\uffb2\014\uffb2\015" +
    "\uffb2\020\uffb2\022\uffb2\052\uffb2\053\uffb2\055\uffb2\056\uffb2" +
    "\061\uffb2\063\uffb2\065\uffb2\001\002\000\004\065\150\001" +
    "\002\000\004\052\u0108\001\002\000\004\045\u0109\001\002" +
    "\000\040\005\uffb0\007\uffb0\011\uffb0\013\uffb0\014\uffb0\015" +
    "\uffb0\020\uffb0\022\uffb0\052\uffb0\053\uffb0\055\uffb0\056\uffb0" +
    "\061\uffb0\063\uffb0\065\uffb0\001\002\000\020\012\uff70\026" +
    "\146\051\uff70\064\uff70\065\uff70\066\uff70\067\uff70\001\002" +
    "\000\020\012\uff59\026\uff59\051\uff59\064\uff59\065\uff59\066" +
    "\uff59\067\uff59\001\002\000\010\045\uff87\047\uff87\052\uff87" +
    "\001\002\000\004\051\u0110\001\002\000\010\045\uff88\047" +
    "\uff88\052\uff88\001\002\000\010\045\uff8d\047\uff8d\052\uff8d" +
    "\001\002\000\022\012\uff70\026\146\051\uff70\052\uff50\064" +
    "\uff70\065\uff70\066\uff70\067\uff70\001\002\000\004\052\u0112" +
    "\001\002\000\010\045\uff89\047\uff89\052\uff89\001\002\000" +
    "\010\045\uff8a\047\uff8a\052\uff8a\001\002\000\010\055\uffd8" +
    "\056\uffd8\065\017\001\002\000\004\055\062\001\002\000" +
    "\012\023\uff3a\055\uff3a\056\uff3a\065\uff3a\001\002\000\004" +
    "\065\066\001\002\000\010\055\uffd2\056\uffd2\065\uffd2\001" +
    "\002\000\004\056\uffd9\001\002\000\006\055\u011b\056\uffcf" +
    "\001\002\000\010\016\uffc4\056\uffc4\065\uffc4\001\002\000" +
    "\010\016\u0121\056\u011f\065\017\001\002\000\004\051\u0124" +
    "\001\002\000\004\065\u0123\001\002\000\004\056\uffd0\001" +
    "\002\000\010\016\uffc5\056\uffc5\065\uffc5\001\002\000\004" +
    "\065\u0122\001\002\000\004\051\uffca\001\002\000\004\051" +
    "\uffcb\001\002\000\006\052\uffc8\065\017\001\002\000\004" +
    "\065\066\001\002\000\004\052\uffc9\001\002\000\004\052" +
    "\u0128\001\002\000\006\055\uffe8\065\uffe8\001\002\000\006" +
    "\055\u012a\065\017\001\002\000\034\005\uff94\011\uff94\013" +
    "\uff94\014\uff94\015\uff94\020\uff94\022\uff94\053\uff94\055\uff94" +
    "\056\uff94\061\uff94\063\uff94\065\uff94\001\002\000\004\065" +
    "\066\001\002\000\006\055\uffe9\065\uffe9\001\002\000\006" +
    "\045\uffdf\047\uffdf\001\002\000\006\045\u0130\047\u012f\001" +
    "\002\000\004\065\066\001\002\000\006\055\uffe1\065\uffe1" +
    "\001\002\000\006\045\uffe0\047\uffe0\001\002\000\034\005" +
    "\122\011\113\013\124\014\101\015\111\020\102\022\131" +
    "\053\uff8b\055\114\056\u0133\061\110\063\117\065\104\001" +
    "\002\000\010\016\uffcd\056\uffcd\065\uffcd\001\002\000\006" +
    "\047\uffbf\052\uffbf\001\002\000\006\047\u0136\052\uffc1\001" +
    "\002\000\004\065\017\001\002\000\004\065\066\001\002" +
    "\000\006\047\uffc0\052\uffc0\001\002\000\006\045\uffe5\047" +
    "\uffe5\001\002\000\006\045\u013c\047\u013b\001\002\000\004" +
    "\065\066\001\002\000\010\055\uffe7\056\uffe7\065\uffe7\001" +
    "\002\000\006\045\uffe6\047\uffe6\001\002\000\004\056\uffda" +
    "\001\002\000\012\006\uffde\010\uffde\055\uffde\065\uffde\001" +
    "\002\000\004\046\u0141\001\002\000\004\065\u0142\001\002" +
    "\000\012\051\uffbe\053\uffbe\055\uffbe\065\uffbe\001\002\000" +
    "\010\016\u0121\056\u0145\065\017\001\002\000\004\051\u0147" +
    "\001\002\000\004\002\001\001\002\000\010\016\uffc7\056" +
    "\uffc7\065\uffc7\001\002\000\006\052\uffc8\065\017\001\002" +
    "\000\004\052\u0149\001\002\000\006\055\uffe8\065\uffe8\001" +
    "\002\000\006\055\u014b\065\017\001\002\000\034\005\uff94" +
    "\011\uff94\013\uff94\014\uff94\015\uff94\020\uff94\022\uff94\053" +
    "\uff94\055\uff94\056\uff94\061\uff94\063\uff94\065\uff94\001\002" +
    "\000\034\005\122\011\113\013\124\014\101\015\111\020" +
    "\102\022\131\053\uff8b\055\114\056\u014d\061\110\063\117" +
    "\065\104\001\002\000\010\016\uffce\056\uffce\065\uffce\001" +
    "\002\000\006\045\uffea\047\uffea\001\002\000\006\045\u0151" +
    "\047\u0150\001\002\000\004\065\066\001\002\000\012\006" +
    "\uffef\010\uffef\055\uffef\065\uffef\001\002\000\006\045\uffeb" +
    "\047\uffeb\001\002\000\004\055\ufffc\001\002\000\012\006" +
    "\ufff7\010\ufff7\055\ufff7\065\ufff7\001\002\000\012\006\024" +
    "\010\025\055\u0156\065\017\001\002\000\010\016\uffc6\056" +
    "\uffc6\065\uffc6\001\002\000\010\016\u0121\056\u0158\065\017" +
    "\001\002\000\004\056\u0159\001\002\000\014\006\ufffb\010" +
    "\ufffb\024\ufffb\055\ufffb\065\ufffb\001\002\000\004\002\000" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0158\000\004\131\003\001\001\000\002\001\001\000" +
    "\004\130\006\001\001\000\002\001\001\000\004\003\007" +
    "\001\001\000\010\004\013\005\012\144\010\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\006\022\011\020" +
    "\133\021\134\017\154\014\001\001\000\002\001\001\000" +
    "\004\012\u014d\001\001\000\004\035\u0142\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\154\025" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\155" +
    "\031\001\001\000\002\001\001\000\004\007\034\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\010\040\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\155\042\001\001\000\002\001" +
    "\001\000\004\156\045\001\001\000\004\154\046\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\023\052\026" +
    "\053\030\051\031\050\032\054\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\024\055\115\060\116\056\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\015\u0117" +
    "\025\u013d\027\u0119\154\u0116\001\001\000\006\024\u0113\115" +
    "\u0115\001\001\000\006\017\063\154\062\001\001\000\002" +
    "\001\001\000\004\043\076\001\001\000\004\012\066\001" +
    "\001\000\004\026\064\001\001\000\002\001\001\000\004" +
    "\132\073\001\001\000\004\020\067\001\001\000\002\001" +
    "\001\000\004\012\072\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\042\041\125\042\122\050\104\055\111\060\115" +
    "\101\114\103\126\124\106\125\102\126\124\137\077\141" +
    "\132\142\127\145\120\152\117\157\131\001\001\000\010" +
    "\051\u010e\054\u010c\071\u0109\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\040\042\364\050\104\055" +
    "\111\060\115\101\114\103\126\124\106\125\102\126\124" +
    "\137\077\141\132\142\127\145\120\152\117\157\365\001" +
    "\001\000\002\001\001\000\010\063\146\160\362\163\361" +
    "\001\001\000\002\001\001\000\004\044\333\001\001\000" +
    "\004\043\331\001\001\000\040\042\325\050\104\055\111" +
    "\060\115\101\114\103\126\124\106\125\102\126\124\137" +
    "\077\141\132\142\127\145\120\152\117\157\326\001\001" +
    "\000\006\141\323\142\127\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\042\041\264\042\122\050" +
    "\104\055\111\060\115\101\114\103\126\124\106\125\102" +
    "\126\124\137\077\141\132\142\127\145\120\152\117\157" +
    "\131\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\140\133\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\057\134\061\135\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\063\146\163\144\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\060\115\070\160\137\151\141\132" +
    "\142\127\145\120\161\154\164\155\001\001\000\002\001" +
    "\001\000\004\154\210\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\064\202\001\001\000" +
    "\004\162\174\001\001\000\002\001\001\000\006\063\146" +
    "\163\172\001\001\000\002\001\001\000\014\063\146\066" +
    "\162\073\163\076\165\163\164\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\074\166\001" +
    "\001\000\002\001\001\000\010\063\146\076\170\163\164" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\072\200\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\060" +
    "\115\070\160\137\151\141\132\142\127\145\120\164\201" +
    "\001\001\000\002\001\001\000\004\165\203\001\001\000" +
    "\004\114\206\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\060\115\070\160\137\151\141\132\142\127\145" +
    "\120\161\207\164\155\001\001\000\002\001\001\000\004" +
    "\147\211\001\001\000\004\067\213\001\001\000\006\063" +
    "\146\163\220\001\001\000\002\001\001\000\014\063\146" +
    "\073\215\075\216\076\165\163\164\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\024\050\227\055\111\060\115\077\230" +
    "\137\077\141\132\142\127\145\120\150\231\001\001\000" +
    "\002\001\001\000\004\100\260\001\001\000\004\104\235" +
    "\001\001\000\004\151\232\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\063\146\111\237\163\240\166\241\001\001\000\004\106" +
    "\253\001\001\000\006\110\242\112\251\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\063\146\163\252\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\050\227\055\111" +
    "\060\115\077\255\137\077\141\132\142\127\145\120\001" +
    "\001\000\004\107\256\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\050\262\055\111\060" +
    "\115\137\077\141\132\142\127\145\120\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\063\146\163\240\166\271\167\267\171\270" +
    "\001\001\000\004\172\300\001\001\000\004\127\276\001" +
    "\001\000\004\170\272\001\001\000\002\001\001\000\010" +
    "\063\146\163\240\166\274\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\113\301\001\001\000\002\001\001\000\012\063\146\163" +
    "\240\166\271\167\303\001\001\000\002\001\001\000\006" +
    "\063\146\163\305\001\001\000\004\047\307\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\153" +
    "\315\001\001\000\002\001\001\000\002\001\001\000\042" +
    "\041\320\042\122\050\104\055\111\060\115\101\114\103" +
    "\126\124\106\125\102\126\124\137\077\141\132\142\127" +
    "\145\120\152\117\157\131\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\102\330\001\001\000\004\102\327\001" +
    "\001\000\002\001\001\000\002\001\001\000\042\041\125" +
    "\042\122\050\104\055\111\060\115\101\114\103\126\124" +
    "\106\125\102\126\124\137\077\141\132\142\127\145\120" +
    "\152\117\157\131\001\001\000\002\001\001\000\014\063" +
    "\146\163\240\166\271\167\267\171\335\001\001\000\002" +
    "\001\001\000\004\045\336\001\001\000\002\001\001\000" +
    "\042\041\340\042\122\050\104\055\111\060\115\101\114" +
    "\103\126\124\106\125\102\126\124\137\077\141\132\142" +
    "\127\145\120\152\117\157\341\001\001\000\002\001\001" +
    "\000\004\046\343\001\001\000\002\001\001\000\040\042" +
    "\344\050\104\055\111\060\115\101\114\103\126\124\106" +
    "\125\102\126\124\137\077\141\132\142\127\145\120\152" +
    "\117\157\345\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\052\347\001\001\000\016\053\351\060\115\137" +
    "\352\141\132\142\127\145\120\001\001\000\014\060\115" +
    "\137\355\141\132\142\127\145\120\001\001\000\002\001" +
    "\001\000\004\056\353\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\060" +
    "\115\137\360\141\132\142\127\145\120\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\063\146\163" +
    "\240\166\271\167\267\171\372\001\001\000\002\001\001" +
    "\000\036\050\104\055\111\060\115\101\114\103\126\124" +
    "\106\125\102\126\124\137\077\141\132\142\127\145\120" +
    "\152\117\157\375\001\001\000\004\044\376\001\001\000" +
    "\002\001\001\000\014\063\146\163\240\166\271\167\267" +
    "\171\377\001\001\000\004\045\u0100\001\001\000\002\001" +
    "\001\000\036\050\104\055\111\060\115\101\114\103\126" +
    "\124\106\125\102\126\124\137\077\141\132\142\127\145" +
    "\120\152\117\157\u0102\001\001\000\004\046\u0103\001\001" +
    "\000\036\050\104\055\111\060\115\101\114\103\126\124" +
    "\106\125\102\126\124\137\077\141\132\142\127\145\120" +
    "\152\117\157\345\001\001\000\002\001\001\000\014\060" +
    "\115\137\u0106\141\132\142\127\145\120\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\063" +
    "\146\163\u0112\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\063\146\073\215\075\u0110\076\165\163\164\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\015\u0117\025\u0118\027\u0119\154\u0116\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\012\u0138\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\033\u011b\001\001\000\010\135\u011c\143\u011f\154\u011d\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\034\u0126\037\u0125\154\u0124\001\001" +
    "\000\004\012\u0133\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\014\u0128\001\001\000\006\021\u012b\154\u012a" +
    "\001\001\000\004\043\u0131\001\001\000\004\012\u012c\001" +
    "\001\000\002\001\001\000\004\022\u012d\001\001\000\002" +
    "\001\001\000\004\012\u0130\001\001\000\002\001\001\000" +
    "\002\001\001\000\042\041\125\042\122\050\104\055\111" +
    "\060\115\101\114\103\126\124\106\125\102\126\124\137" +
    "\077\141\132\142\127\145\120\152\117\157\131\001\001" +
    "\000\002\001\001\000\004\040\u0134\001\001\000\002\001" +
    "\001\000\004\154\u0136\001\001\000\004\012\u0137\001\001" +
    "\000\002\001\001\000\004\016\u0139\001\001\000\002\001" +
    "\001\000\004\012\u013c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\135\u0143" +
    "\136\u0145\154\u011d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\034\u0147\037\u0125\154\u0124" +
    "\001\001\000\002\001\001\000\004\014\u0149\001\001\000" +
    "\006\021\u012b\154\u012a\001\001\000\004\043\u014b\001\001" +
    "\000\042\041\125\042\122\050\104\055\111\060\115\101" +
    "\114\103\126\124\106\125\102\126\124\137\077\141\132" +
    "\142\127\145\120\152\117\157\131\001\001\000\002\001" +
    "\001\000\004\013\u014e\001\001\000\002\001\001\000\004" +
    "\012\u0151\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\u0154\001\001\000\014\006\022" +
    "\011\020\133\021\134\017\154\014\001\001\000\004\035" +
    "\u0156\001\001\000\010\135\u0143\136\u0145\154\u011d\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MJParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MJParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MJParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {

	errorDetected = false;

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

	Symbol s = this.getScanner().next_token();
	if (s != null && s.value != null) 
		log.info(s.toString() + " " + s.value.toString());
	return s;

    }


	
	boolean errorDetected;
	
	Logger log = Logger.getLogger(getClass());
   
   
    // slede redefinisani metodi za prijavu gresaka radi izmene teksta poruke
     
    public void report_fatal_error(String message, Object info) throws java.lang.Exception {
      done_parsing();
      report_error(message, info);
    }
  
    public void syntax_error(Symbol cur_token) {
        report_error("\nSintaksna greska", cur_token);
    }
  
    public void unrecovered_syntax_error(Symbol cur_token) throws java.lang.Exception {
        report_fatal_error("Fatalna greska, parsiranje se ne moze nastaviti", cur_token);
    }

    public void report_error(String message, Object info) {
    	errorDetected = true;
    	StringBuilder msg = new StringBuilder(message); 
    	if (info instanceof Symbol)
            msg.append (" na liniji ").append(((Symbol)info).left);
        log.error(msg.toString());
    }



}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MJParser$actions {
  private final MJParser parser;

  /** Constructor */
  CUP$MJParser$actions(MJParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MJParser$do_action(
    int                        CUP$MJParser$act_num,
    java_cup.runtime.lr_parser CUP$MJParser$parser,
    java.util.Stack            CUP$MJParser$stack,
    int                        CUP$MJParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MJParser$result;

      /* select the action based on the action number */
      switch (CUP$MJParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // AdditionalIdent ::= 
            {
              AdditionalIdent RESULT = null;
		 RESULT=new NoAddIdent(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(78/*AdditionalIdent*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // AdditionalIdent ::= COLON COLON 
            {
              AdditionalIdent RESULT = null;
		 RESULT=new AddIdent(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(78/*AdditionalIdent*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // Label ::= IDENT 
            {
              Label RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Label(I1); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(77/*Label*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // OptionalStaticInitializer ::= StaticInitializer 
            {
              OptionalStaticInitializer RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		StaticInitializer S1 = (StaticInitializer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NoOptStatInitialize(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*OptionalStaticInitializer*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // OptionalStaticInitializer ::= OptionalStaticInitializer StaticInitializer 
            {
              OptionalStaticInitializer RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalStaticInitializer O1 = (OptionalStaticInitializer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		StaticInitializer S2 = (StaticInitializer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptStatInitialize(O1, S2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*OptionalStaticInitializer*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // StaticInitializer ::= STATIC LBRACE StatementList RBRACE 
            {
              StaticInitializer RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S1 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new StaticInit(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(75/*StaticInitializer*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // Addop ::= MINUS 
            {
              Addop RESULT = null;
		 RESULT=new AddOpMinus(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(74/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // Addop ::= PLUS 
            {
              Addop RESULT = null;
		 RESULT=new AddOpPlus(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(74/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // OptionalCondFact ::= 
            {
              OptionalCondFact RESULT = null;
		 RESULT=new NoOptCondFact(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(118/*OptionalCondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // OptionalCondFact ::= OptionalCondFact AND CondFact 
            {
              OptionalCondFact RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalCondFact O1 = (OptionalCondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondFact C2 = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptCondFact(O1, C2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(118/*OptionalCondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // CondTerm ::= CondFact OptionalCondFact 
            {
              CondTerm RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		CondFact C1 = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OptionalCondFact O2 = (OptionalCondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CondTerm(C1, O2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(117/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // CondOrBegin ::= 
            {
              CondOrBegin RESULT = null;
		 RESULT=new CondOrBegin(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(73/*CondOrBegin*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // OptionalCondTerm ::= 
            {
              OptionalCondTerm RESULT = null;
		 RESULT=new NoOptCondTerm(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(120/*OptionalCondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // OptionalCondTerm ::= OptionalCondTerm CondOrBegin OR CondTerm 
            {
              OptionalCondTerm RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		OptionalCondTerm O1 = (OptionalCondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		CondOrBegin C2 = (CondOrBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondTerm C3 = (CondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptCondTerm(O1, C2, C3); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(120/*OptionalCondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // Condition ::= CondTerm OptionalCondTerm 
            {
              Condition RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		CondTerm C1 = (CondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OptionalCondTerm O2 = (OptionalCondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Condition(C1, O2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(119/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // Relop ::= LTE 
            {
              Relop RESULT = null;
		 RESULT=new RelLtEq(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // Relop ::= LT 
            {
              Relop RESULT = null;
		 RESULT=new RelLt(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // Relop ::= GTE 
            {
              Relop RESULT = null;
		 RESULT=new RelGrtEq(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // Relop ::= GT 
            {
              Relop RESULT = null;
		 RESULT=new RelGrt(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // Relop ::= NOT_EQUALS 
            {
              Relop RESULT = null;
		 RESULT=new RelNotEq(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // Relop ::= EQUALS_EQUALS 
            {
              Relop RESULT = null;
		 RESULT=new RelEqEq(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // AdditionalCondFact ::= 
            {
              AdditionalCondFact RESULT = null;
		 RESULT=new NoAddCondFact(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*AdditionalCondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // AdditionalCondFact ::= CondFact 
            {
              AdditionalCondFact RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondFact C1 = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddCondFact(C1); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*AdditionalCondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // AdditionalRelopExpr ::= 
            {
              AdditionalRelopExpr RESULT = null;
		 RESULT=new NoAddRelopExpr(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(70/*AdditionalRelopExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // AdditionalRelopExpr ::= Relop Expr 
            {
              AdditionalRelopExpr RESULT = null;
		int R1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int R1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Relop R1 = (Relop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr E2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddRelopExpr(R1, E2); RESULT.setLine(R1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(70/*AdditionalRelopExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // CondFact ::= Expr AdditionalRelopExpr 
            {
              CondFact RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		AdditionalRelopExpr A2 = (AdditionalRelopExpr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CondFact(E1, A2); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(116/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // AdditionalActPars ::= 
            {
              AdditionalActPars RESULT = null;
		 RESULT=new NoAddActPar(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*AdditionalActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // AdditionalActPars ::= ActPars 
            {
              AdditionalActPars RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ActPars A1 = (ActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddActPar(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*AdditionalActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // OptionalComaExpr ::= 
            {
              OptionalComaExpr RESULT = null;
		 RESULT=new NoOptCommaExpr(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*OptionalComaExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // OptionalComaExpr ::= OptionalComaExpr COMMA PomExprActPars 
            {
              OptionalComaExpr RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalComaExpr O1 = (OptionalComaExpr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int P2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int P2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		PomExprActPars P2 = (PomExprActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptCommaExpr(O1, P2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*OptionalComaExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // ActPars ::= PomExprActPars OptionalComaExpr 
            {
              ActPars RESULT = null;
		int P1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int P1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		PomExprActPars P1 = (PomExprActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OptionalComaExpr O2 = (OptionalComaExpr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ActPars(P1, O2); RESULT.setLine(P1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(57/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // PomExprActPars ::= Expr 
            {
              PomExprActPars RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PomExprActPars(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(60/*PomExprActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // Mulop ::= PERCENT 
            {
              Mulop RESULT = null;
		 RESULT=new MulopPercent(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(56/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // Mulop ::= DIV 
            {
              Mulop RESULT = null;
		 RESULT=new MulopDiv(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(56/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // Mulop ::= MUL 
            {
              Mulop RESULT = null;
		 RESULT=new MulopMul(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(56/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // Assignop ::= EQUALS 
            {
              Assignop RESULT = null;
		 RESULT=new Assignop(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(55/*Assignop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // OrExprActPars ::= LPAREN AdditionalActPars RPAREN 
            {
              OrExprActPars RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		AdditionalActPars A1 = (AdditionalActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new OrActPar(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(53/*OrExprActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // OrExprActPars ::= LSQUARE Expr RSQUARE 
            {
              OrExprActPars RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new OrExprop(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(53/*OrExprActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // AdditionalActParOp ::= 
            {
              AdditionalActParOp RESULT = null;
		 RESULT=new NoAddActPar2(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(52/*AdditionalActParOp*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // AdditionalActParOp ::= ActPars 
            {
              AdditionalActParOp RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ActPars A1 = (ActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddActPar2(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(52/*AdditionalActParOp*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // AdditionalParentheses ::= 
            {
              AdditionalParentheses RESULT = null;
		 RESULT=new NoAddParen(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*AdditionalParentheses*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // AdditionalParentheses ::= LPAREN AdditionalActParOp RPAREN 
            {
              AdditionalParentheses RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		AdditionalActParOp A1 = (AdditionalActParOp)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new AddParen(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*AdditionalParentheses*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // CuvarObjektaKlase ::= 
            {
              CuvarObjektaKlase RESULT = null;
		 RESULT=new CuvarObjektaKlase(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(101/*CuvarObjektaKlase*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // Factor ::= LPAREN Expr RPAREN 
            {
              Factor RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new FactorExpr(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(114/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // Factor ::= NEW Type CuvarObjektaKlase OrExprActPars 
            {
              Factor RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		CuvarObjektaKlase C2 = (CuvarObjektaKlase)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OrExprActPars O3 = (OrExprActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FactorNew(T1, C2, O3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(114/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // Factor ::= BOOLCONST 
            {
              Factor RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Boolean val = (Boolean)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FactorBool(val); RESULT.setLine(valleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(114/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // Factor ::= CHARCONST 
            {
              Factor RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Character val = (Character)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FactorChar(val); RESULT.setLine(valleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(114/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // Factor ::= NUMCONST 
            {
              Factor RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FactorNum(val); RESULT.setLine(valleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(114/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // Factor ::= Designator 
            {
              Factor RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FactorIdent(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(114/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // Factor ::= FactorDesignator LPAREN AdditionalActParOp RPAREN 
            {
              Factor RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		FactorDesignator F1 = (FactorDesignator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		AdditionalActParOp A2 = (AdditionalActParOp)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new FactorDesign(F1, A2); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(114/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // FactorDesignator ::= Designator 
            {
              FactorDesignator RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FactorDesignator(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(54/*FactorDesignator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // OptionalTermMulop ::= 
            {
              OptionalTermMulop RESULT = null;
		 RESULT=new NoOptTermMul(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(112/*OptionalTermMulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // OptionalTermMulop ::= OptionalTermMulop Mulop Factor 
            {
              OptionalTermMulop RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalTermMulop O1 = (OptionalTermMulop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Mulop M2 = (Mulop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int F3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Factor F3 = (Factor)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptTermMul(O1, M2, F3); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(112/*OptionalTermMulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Term ::= Factor OptionalTermMulop 
            {
              Term RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Factor F1 = (Factor)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OptionalTermMulop O2 = (OptionalTermMulop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Term(F1, O2); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(111/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // AdditionalExpr ::= 
            {
              AdditionalExpr RESULT = null;
		 RESULT=new NoAddExpr(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(110/*AdditionalExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // AdditionalExpr ::= Expr 
            {
              AdditionalExpr RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddExpr(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(110/*AdditionalExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // OptionalAddopTerm ::= 
            {
              OptionalAddopTerm RESULT = null;
		 RESULT=new NoOptAddTerm(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(115/*OptionalAddopTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // OptionalAddopTerm ::= OptionalAddopTerm Addop Term 
            {
              OptionalAddopTerm RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalAddopTerm O1 = (OptionalAddopTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Addop A2 = (Addop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int T3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int T3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Term T3 = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptAddTerm(O1, A2, T3); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(115/*OptionalAddopTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // AdditionalMinus ::= 
            {
              AdditionalMinus RESULT = null;
		 RESULT=new NoAdditMinus(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(49/*AdditionalMinus*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // AdditionalMinus ::= MINUS 
            {
              AdditionalMinus RESULT = null;
		 RESULT=new AdditMinus(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(49/*AdditionalMinus*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // ExprMinusFlag ::= 
            {
              ExprMinusFlag RESULT = null;
		 RESULT=new ExprMinusFlag(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(50/*ExprMinusFlag*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Expr ::= AdditionalMinus Term ExprMinusFlag OptionalAddopTerm 
            {
              Expr RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		AdditionalMinus A1 = (AdditionalMinus)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int T2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int T2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Term T2 = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int E3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ExprMinusFlag E3 = (ExprMinusFlag)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OptionalAddopTerm O4 = (OptionalAddopTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Expr(A1, T2, E3, O4); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(113/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // DesIdent ::= IDENT 
            {
              DesIdent RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesIdent(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(48/*DesIdent*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // DesUnmatchFlag ::= IDENT COLON COLON 
            {
              DesUnmatchFlag RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new DesUnmatchFlag(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(46/*DesUnmatchFlag*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // OrIEFlag ::= 
            {
              OrIEFlag RESULT = null;
		 RESULT=new OrIEFlag(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(47/*OrIEFlag*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // OrIdentExpr ::= DOT MAX LPAREN RPAREN 
            {
              OrIdentExpr RESULT = null;
		 RESULT=new MaxArray(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*OrIdentExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // OrIdentExpr ::= OrIEFlag LSQUARE Expr RSQUARE 
            {
              OrIdentExpr RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		OrIEFlag O1 = (OrIEFlag)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new OrExpr(O1, E2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*OrIdentExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // OrIdentExpr ::= DOT IDENT 
            {
              OrIdentExpr RESULT = null;
		int idenleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int idenright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String iden = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OrIdent(iden); RESULT.setLine(idenleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*OrIdentExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // OptionalDesignatorOpp ::= 
            {
              OptionalDesignatorOpp RESULT = null;
		 RESULT=new NoOptDesignOpp(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(94/*OptionalDesignatorOpp*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // OptionalDesignatorOpp ::= OptionalDesignatorOpp OrIdentExpr 
            {
              OptionalDesignatorOpp RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalDesignatorOpp O1 = (OptionalDesignatorOpp)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OrIdentExpr O2 = (OrIdentExpr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptDesignOpp(O1, O2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(94/*OptionalDesignatorOpp*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // DesignatorUnmatched ::= DesUnmatchFlag DesignatorMatched 
            {
              DesignatorUnmatched RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		DesUnmatchFlag D1 = (DesUnmatchFlag)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorMatched D2 = (DesignatorMatched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesUnmatch(D1, D2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(99/*DesignatorUnmatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // DesignatorMatched ::= DesPom OptionalDesignatorOpp 
            {
              DesignatorMatched RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		DesPom D1 = (DesPom)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OptionalDesignatorOpp O2 = (OptionalDesignatorOpp)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesMatch(D1, O2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(95/*DesignatorMatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // DesPom ::= IDENT 
            {
              DesPom RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesPom(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(96/*DesPom*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Designator ::= DesignatorUnmatched 
            {
              Designator RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorUnmatched D1 = (DesignatorUnmatched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorU(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(93/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Designator ::= DesignatorMatched 
            {
              Designator RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorMatched D1 = (DesignatorMatched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorM(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(93/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // DesHardAfter ::= 
            {
              DesHardAfter RESULT = null;
		 RESULT=new DesHardAfter(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(44/*DesHardAfter*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // AdditionalDesign ::= 
            {
              AdditionalDesign RESULT = null;
		 RESULT=new NoAdditionalDes(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*AdditionalDesign*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // AdditionalDesign ::= Designator DesHardAfter 
            {
              AdditionalDesign RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesHardAfter D2 = (DesHardAfter)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AdditionalDes(D1, D2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*AdditionalDesign*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // OptionalDesignComma ::= 
            {
              OptionalDesignComma RESULT = null;
		 RESULT=new NooOptDesCom(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*OptionalDesignComma*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // OptionalDesignComma ::= OptionalDesignComma AdditionalDesign COMMA 
            {
              OptionalDesignComma RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalDesignComma O1 = (OptionalDesignComma)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		AdditionalDesign A2 = (AdditionalDesign)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new OptDesCom(O1, A2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*OptionalDesignComma*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // PomDesAddStek ::= 
            {
              PomDesAddStek RESULT = null;
		 RESULT=new PomDesAddStek(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*PomDesAddStek*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // OrDesStmt ::= DECREMENT 
            {
              OrDesStmt RESULT = null;
		 RESULT=new OrDecrement(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*OrDesStmt*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // OrDesStmt ::= INCREMENT 
            {
              OrDesStmt RESULT = null;
		 RESULT=new OrIncrement(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*OrDesStmt*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // OrDesStmt ::= PomDesAddStek LPAREN AdditionalActPars RPAREN 
            {
              OrDesStmt RESULT = null;
		int P1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int P1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		PomDesAddStek P1 = (PomDesAddStek)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		AdditionalActPars A2 = (AdditionalActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new OrActPars(P1, A2); RESULT.setLine(P1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*OrDesStmt*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // OrDesStmt ::= Assignop Expr 
            {
              OrDesStmt RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Assignop A1 = (Assignop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr E2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OrAssignExpr(A1, E2); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*OrDesStmt*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // DesHardStart ::= 
            {
              DesHardStart RESULT = null;
		 RESULT=new DesHardStart(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*DesHardStart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // DesignatorStatement ::= DesHardStart LSQUARE OptionalDesignComma MUL Designator RSQUARE EQUALS Designator 
            {
              DesignatorStatement RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).right;
		DesHardStart D1 = (DesHardStart)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		OptionalDesignComma O2 = (OptionalDesignComma)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int D3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int D3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Designator D3 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int D4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Designator D4 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesStmtH(D1, O2, D3, D4); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // DesignatorStatement ::= Designator OrDesStmt 
            {
              DesignatorStatement RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OrDesStmt O2 = (OrDesStmt)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesStmtE(D1, O2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // OptionalDesignatorStmtL ::= 
            {
              OptionalDesignatorStmtL RESULT = null;
		 RESULT=new NoOptDesStmtL(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(62/*OptionalDesignatorStmtL*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // OptionalDesignatorStmtL ::= OptionalDesignatorStmtL COMMA DesignatorStatement 
            {
              OptionalDesignatorStmtL RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalDesignatorStmtL O1 = (OptionalDesignatorStmtL)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorStatement D2 = (DesignatorStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptDesStmtL(O1, D2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(62/*OptionalDesignatorStmtL*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // AdditionalDesignatoStmtList ::= 
            {
              AdditionalDesignatoStmtList RESULT = null;
		 RESULT=new NoAddDesStmtL(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(61/*AdditionalDesignatoStmtList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // AdditionalDesignatoStmtList ::= DesignatorStatement OptionalDesignatorStmtL 
            {
              AdditionalDesignatoStmtList RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		DesignatorStatement D1 = (DesignatorStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OptionalDesignatorStmtL O2 = (OptionalDesignatorStmtL)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddDesStmtL(D1, O2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(61/*AdditionalDesignatoStmtList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // AdditionalPrintNum ::= 
            {
              AdditionalPrintNum RESULT = null;
		 RESULT=new NoAddPrintN(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*AdditionalPrintNum*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // AdditionalPrintNum ::= COMMA NUMCONST 
            {
              AdditionalPrintNum RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddPrintN(val); RESULT.setLine(valleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*AdditionalPrintNum*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // StatementList ::= 
            {
              StatementList RESULT = null;
		 RESULT=new NoStmtList(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // StatementList ::= StatementList Statement 
            {
              StatementList RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S1 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statement S2 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new StmtList(S1, S2); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // ForFlagEnd ::= 
            {
              ForFlagEnd RESULT = null;
		 RESULT=new ForFlagEnd(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(69/*ForFlagEnd*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // ForFlag ::= 
            {
              ForFlag RESULT = null;
		 RESULT=new ForFlag(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(68/*ForFlag*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // AdditionalDesignatoStmtListAfterFor ::= AdditionalDesignatoStmtList 
            {
              AdditionalDesignatoStmtListAfterFor RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		AdditionalDesignatoStmtList A1 = (AdditionalDesignatoStmtList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AdditionalDesignatoStmtListAfterFor(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*AdditionalDesignatoStmtListAfterFor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // LoopStart ::= 
            {
              LoopStart RESULT = null;
		 RESULT=new LoopStart(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*LoopStart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // ForStart ::= FOR 
            {
              ForStart RESULT = null;
		 RESULT=new ForStart(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(65/*ForStart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // ForEnd ::= 
            {
              ForEnd RESULT = null;
		 RESULT=new ForEnd(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(64/*ForEnd*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // ForBegin ::= ForStart LPAREN AdditionalDesignatoStmtList LoopStart SEMICOLON AdditionalCondFact ForFlag SEMICOLON AdditionalDesignatoStmtList ForFlagEnd RPAREN 
            {
              ForBegin RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-10)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-10)).right;
		ForStart F1 = (ForStart)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-10)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).right;
		AdditionalDesignatoStmtList A2 = (AdditionalDesignatoStmtList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).value;
		int L3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left;
		int L3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).right;
		LoopStart L3 = (LoopStart)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).value;
		int A4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int A4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		AdditionalCondFact A4 = (AdditionalCondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int F5left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int F5right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		ForFlag F5 = (ForFlag)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int A6left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int A6right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		AdditionalDesignatoStmtList A6 = (AdditionalDesignatoStmtList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int F7left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F7right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ForFlagEnd F7 = (ForFlagEnd)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ForBegin(F1, A2, L3, A4, F5, A6, F7); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(63/*ForBegin*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-10)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // ForArrayMod ::= IDENT RPAREN 
            {
              ForArrayMod RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ForArrayMod(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(103/*ForArrayMod*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // ForVar ::= IDENT COLON 
            {
              ForVar RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ForVar(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(102/*ForVar*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // ForModBegin ::= ForStart LPAREN ForVar ForArrayMod 
            {
              ForModBegin RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		ForStart F1 = (ForStart)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int F2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ForVar F2 = (ForVar)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int F3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ForArrayMod F3 = (ForArrayMod)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ForModBegin(F1, F2, F3); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(82/*ForModBegin*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // DesignatorArr ::= IDENT 
            {
              DesignatorArr RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorArr(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(81/*DesignatorArr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // DesignatorI ::= IDENT 
            {
              DesignatorI RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorI(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(80/*DesignatorI*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // WhileBegin ::= WHILE 
            {
              WhileBegin RESULT = null;
		 RESULT=new WhileBegin(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(83/*WhileBegin*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // FeVar ::= IDENT 
            {
              FeVar RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FeVar(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(105/*FeVar*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // DesignatorFE ::= IDENT DOT FOREACH 
            {
              DesignatorFE RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new DesignatorFE(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(104/*DesignatorFE*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // DoWhileEnd ::= RPAREN 
            {
              DoWhileEnd RESULT = null;
		 RESULT=new DoWhileEnd(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(85/*DoWhileEnd*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // DoWhileBegin ::= DO 
            {
              DoWhileBegin RESULT = null;
		 RESULT=new DoWhileBegin(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(84/*DoWhileBegin*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Matched ::= DoWhileBegin Statement WHILE LPAREN Condition DoWhileEnd SEMICOLON 
            {
              Matched RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		DoWhileBegin D1 = (DoWhileBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Statement S2 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int C3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Condition C3 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int D4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		DoWhileEnd D4 = (DoWhileEnd)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new DoWhile1(D1, S2, C3, D4); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Matched ::= DesignatorFE LPAREN FeVar ARROW Statement RPAREN SEMICOLON 
            {
              Matched RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		DesignatorFE D1 = (DesignatorFE)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int F2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int F2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		FeVar F2 = (FeVar)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int S3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int S3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Statement S3 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new ForeachStmt(D1, F2, S3); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Matched ::= WhileBegin LPAREN Condition RPAREN Matched 
            {
              Matched RESULT = null;
		int W1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int W1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		WhileBegin W1 = (WhileBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Condition C2 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int M3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Matched M3 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new While(W1, C2, M3); RESULT.setLine(W1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Matched ::= ForModBegin Unmatched 
            {
              Matched RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ForModBegin F1 = (ForModBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int U2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int U2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Unmatched U2 = (Unmatched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ForArr2(F1, U2); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Matched ::= ForModBegin Matched 
            {
              Matched RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ForModBegin F1 = (ForModBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Matched M2 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ForArr(F1, M2); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Matched ::= LBRACE StatementList RBRACE 
            {
              Matched RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S1 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new StmtStmt(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Matched ::= ForBegin Unmatched ForEnd 
            {
              Matched RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ForBegin F1 = (ForBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int U2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int U2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Unmatched U2 = (Unmatched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int F3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ForEnd F3 = (ForEnd)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new StmtFor2(F1, U2, F3); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Matched ::= ForBegin Matched ForEnd 
            {
              Matched RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ForBegin F1 = (ForBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Matched M2 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int F3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ForEnd F3 = (ForEnd)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new StmtFor(F1, M2, F3); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Matched ::= PRINT LPAREN Expr AdditionalPrintNum RPAREN SEMICOLON 
            {
              Matched RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		AdditionalPrintNum A2 = (AdditionalPrintNum)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new StmtPrint(E1, A2); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Matched ::= READ LPAREN Designator RPAREN SEMICOLON 
            {
              Matched RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new StmtRead(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Matched ::= RETURN AdditionalExpr SEMICOLON 
            {
              Matched RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		AdditionalExpr A1 = (AdditionalExpr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new StmtReturn(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Matched ::= CONTINUE SEMICOLON 
            {
              Matched RESULT = null;
		 RESULT=new StmtContinue(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Matched ::= BREAK SEMICOLON 
            {
              Matched RESULT = null;
		 RESULT=new StmtBreak(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Matched ::= IF IfBegin Condition IfBeginEnd RPAREN Matched ElseBegin Matched 
            {
              Matched RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		IfBegin I1 = (IfBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Condition C2 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int I3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int I3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		IfBeginEnd I3 = (IfBeginEnd)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int M4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int M4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Matched M4 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int E5left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E5right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ElseBegin E5 = (ElseBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M6left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M6right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Matched M6 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new IfElseMatched(I1, C2, I3, M4, E5, M6); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Matched ::= DesignatorStatement SEMICOLON 
            {
              Matched RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		DesignatorStatement D1 = (DesignatorStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new DesStm(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(109/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ElseBegin ::= ELSE 
            {
              ElseBegin RESULT = null;
		 RESULT=new ElseBegin(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*ElseBegin*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // IfBeginEnd ::= 
            {
              IfBeginEnd RESULT = null;
		 RESULT=new IfBeginEnd(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*IfBeginEnd*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // IfBegin ::= LPAREN 
            {
              IfBegin RESULT = null;
		 RESULT=new IfBegin(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*IfBegin*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Unmatched ::= IF IfBegin Condition IfBeginEnd RPAREN Matched ElseBegin Unmatched 
            {
              Unmatched RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		IfBegin I1 = (IfBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Condition C2 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int I3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int I3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		IfBeginEnd I3 = (IfBeginEnd)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int M4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int M4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Matched M4 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int E5left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E5right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ElseBegin E5 = (ElseBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int U6left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int U6right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Unmatched U6 = (Unmatched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new IfElseUnmatched(I1, C2, I3, M4, E5, U6); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*Unmatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Unmatched ::= IF IfBegin Condition IfBeginEnd RPAREN Statement 
            {
              Unmatched RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		IfBegin I1 = (IfBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Condition C2 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int I3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int I3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		IfBeginEnd I3 = (IfBeginEnd)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statement S4 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new IfUnmatched(I1, C2, I3, S4); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*Unmatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Statement ::= Unmatched 
            {
              Statement RESULT = null;
		int U1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int U1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Unmatched U1 = (Unmatched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new UnmatchedStmt(U1); RESULT.setLine(U1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Statement ::= Matched 
            {
              Statement RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Matched M1 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MatchedStmt(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Type ::= IDENT 
            {
              Type RESULT = null;
		int typeNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int typeNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String typeName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new TypeBaseNoColon(typeName); RESULT.setLine(typeNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(106/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Type ::= IDENT COLON COLON IDENT 
            {
              Type RESULT = null;
		int Nnameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int Nnameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		String Nname = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int typeNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int typeNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String typeName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new TypeOptDoubleColon(Nname, typeName); RESULT.setLine(Nnameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(106/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // OptionalVarDeclList2 ::= 
            {
              OptionalVarDeclList2 RESULT = null;
		 RESULT=new NoOptionalVarList2(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*OptionalVarDeclList2*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // OptionalVarDeclList2 ::= OptionalVarDeclList2 COMMA Type NewVarDecl 
            {
              OptionalVarDeclList2 RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		OptionalVarDeclList2 O1 = (OptionalVarDeclList2)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int T2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int T2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type T2 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int N3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		NewVarDecl N3 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptionalVarList2(O1, T2, N3); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*OptionalVarDeclList2*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // FormPars ::= Type NewVarDecl OptionalVarDeclList2 
            {
              FormPars RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		NewVarDecl N2 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		OptionalVarDeclList2 O3 = (OptionalVarDeclList2)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FormPars(T1, N2, O3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // MethodDeclNamespaceList ::= 
            {
              MethodDeclNamespaceList RESULT = null;
		 RESULT=new NoMethodDeclNamespaceL(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*MethodDeclNamespaceList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // MethodDeclNamespaceList ::= MethodDeclNamespaceList MethodDeclNamespace 
            {
              MethodDeclNamespaceList RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclNamespaceList M1 = (MethodDeclNamespaceList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDeclNamespace M2 = (MethodDeclNamespace)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclNamespaceL(M1, M2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*MethodDeclNamespaceList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // MethodDeclClassList ::= 
            {
              MethodDeclClassList RESULT = null;
		 RESULT=new NoMethodDeclClassL(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*MethodDeclClassList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // MethodDeclClassList ::= MethodDeclClassList MethodDeclClass 
            {
              MethodDeclClassList RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclClassList M1 = (MethodDeclClassList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDeclClass M2 = (MethodDeclClass)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethDeclClassL(M1, M2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*MethodDeclClassList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // MethodDeclList ::= 
            {
              MethodDeclList RESULT = null;
		 RESULT=new NoMethDeclL(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // MethodDeclList ::= MethodDeclList MethodDecl 
            {
              MethodDeclList RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclList M1 = (MethodDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDecl M2 = (MethodDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethDeclL(M1, M2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // AdditionalFormPars ::= 
            {
              AdditionalFormPars RESULT = null;
		 RESULT=new NoAddFormPars(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*AdditionalFormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // AdditionalFormPars ::= FormPars 
            {
              AdditionalFormPars RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		FormPars F1 = (FormPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddFormPars(F1); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*AdditionalFormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // TypeOrVoid ::= VOID IDENT 
            {
              TypeOrVoid RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VoidOpt(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(91/*TypeOrVoid*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // TypeOrVoid ::= Type IDENT 
            {
              TypeOrVoid RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new TypeOpt(T1, name); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(91/*TypeOrVoid*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // MethodDeclNamespace ::= TypeOrVoid LPAREN AdditionalFormPars RPAREN OptionalMethVarDeclL LBRACE StatementList RBRACE 
            {
              MethodDeclNamespace RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).right;
		TypeOrVoid T1 = (TypeOrVoid)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		AdditionalFormPars A2 = (AdditionalFormPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		OptionalMethVarDeclL O3 = (OptionalMethVarDeclL)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int S4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S4 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new MethodDeclNamespace(T1, A2, O3, S4); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(100/*MethodDeclNamespace*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // MethodDeclClass ::= TypeOrVoid LPAREN AdditionalFormPars RPAREN OptionalMethVarDeclL LBRACE StatementList RBRACE 
            {
              MethodDeclClass RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).right;
		TypeOrVoid T1 = (TypeOrVoid)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		AdditionalFormPars A2 = (AdditionalFormPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		OptionalMethVarDeclL O3 = (OptionalMethVarDeclL)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int S4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S4 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new MethodDeclClass(T1, A2, O3, S4); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(97/*MethodDeclClass*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // MethodDecl ::= TypeOrVoid LPAREN AdditionalFormPars RPAREN OptionalMethVarDeclL LBRACE StatementList RBRACE 
            {
              MethodDecl RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).right;
		TypeOrVoid T1 = (TypeOrVoid)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		AdditionalFormPars A2 = (AdditionalFormPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		OptionalMethVarDeclL O3 = (OptionalMethVarDeclL)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int S4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S4 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new MethodDecl(T1, A2, O3, S4); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(92/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // AdditionalMethodClassDecl ::= StaticEndDef 
            {
              AdditionalMethodClassDecl RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		StaticEndDef S1 = (StaticEndDef)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NoAddClassMeth(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*AdditionalMethodClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // AdditionalMethodClassDecl ::= StaticEndDef LBRACE MethodDeclClassList RBRACE 
            {
              AdditionalMethodClassDecl RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		StaticEndDef S1 = (StaticEndDef)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclClassList M2 = (MethodDeclClassList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new AddClassMeth(S1, M2); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*AdditionalMethodClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // OptionalVarDecl ::= 
            {
              OptionalVarDecl RESULT = null;
		 RESULT=new NoOptVarDecl(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*OptionalVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // OptionalVarDecl ::= OptionalVarDecl VarDeclClass 
            {
              OptionalVarDecl RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalVarDecl O1 = (OptionalVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDeclClass V2 = (VarDeclClass)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptVarDecl(O1, V2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*OptionalVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // OptionalStatic ::= StaticStartDef 
            {
              OptionalStatic RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		StaticStartDef S1 = (StaticStartDef)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NoOptionalStatic(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*OptionalStatic*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // OptionalStatic ::= OptionalStatic STATIC VarDeclStatic StaticStartDef 
            {
              OptionalStatic RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		OptionalStatic O1 = (OptionalStatic)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDeclStatic V2 = (VarDeclStatic)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		StaticStartDef S3 = (StaticStartDef)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptionalStat(O1, V2, S3); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*OptionalStatic*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // AdditionalExtends ::= 
            {
              AdditionalExtends RESULT = null;
		 RESULT=new NoAdditionalExtend(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(108/*AdditionalExtends*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // AdditionalExtends ::= EXTENDS Type 
            {
              AdditionalExtends RESULT = null;
		int typeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Type type = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AdditionalExtend(type); RESULT.setLine(typeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(108/*AdditionalExtends*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // StaticStartDef ::= 
            {
              StaticStartDef RESULT = null;
		 RESULT=new StaticStartDef(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*StaticStartDef*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // StaticEndDef ::= 
            {
              StaticEndDef RESULT = null;
		 RESULT=new StaticEndDef(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*StaticEndDef*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ClassUnmat ::= OptionalStatic OptionalStaticInitializer OptionalVarDecl AdditionalMethodClassDecl 
            {
              ClassUnmat RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		OptionalStatic O1 = (OptionalStatic)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalStaticInitializer O2 = (OptionalStaticInitializer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalVarDecl O3 = (OptionalVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int A4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		AdditionalMethodClassDecl A4 = (AdditionalMethodClassDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassU(O1, O2, O3, A4); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*ClassUnmat*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ClassMat ::= OptionalStatic OptionalVarDecl AdditionalMethodClassDecl 
            {
              ClassMat RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalStatic O1 = (OptionalStatic)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int O2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalVarDecl O2 = (OptionalVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int A3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		AdditionalMethodClassDecl A3 = (AdditionalMethodClassDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassM(O1, O2, A3); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*ClassMat*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ClassBody ::= ClassUnmat 
            {
              ClassBody RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ClassUnmat C1 = (ClassUnmat)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassUnmatch(C1); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*ClassBody*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ClassBody ::= ClassMat 
            {
              ClassBody RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ClassMat C1 = (ClassMat)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassMatch(C1); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*ClassBody*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ClassDeclBegin ::= CLASS IDENT AdditionalExtends 
            {
              ClassDeclBegin RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		AdditionalExtends A1 = (AdditionalExtends)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassDeclBegin(name, A1); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(90/*ClassDeclBegin*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ClassDecl ::= ClassDeclBegin LBRACE ClassBody RBRACE 
            {
              ClassDecl RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		ClassDeclBegin C1 = (ClassDeclBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ClassBody C2 = (ClassBody)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassDeclaration(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(89/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // OptionalVarDeclListMeth ::= 
            {
              OptionalVarDeclListMeth RESULT = null;
		 RESULT=new NoOptionalVarListMeth(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*OptionalVarDeclListMeth*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // OptionalVarDeclListMeth ::= OptionalVarDeclListMeth COMMA NewVarDecl 
            {
              OptionalVarDeclListMeth RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalVarDeclListMeth O1 = (OptionalVarDeclListMeth)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		NewVarDecl N2 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptionalVarListMeth(O1, N2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*OptionalVarDeclListMeth*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // VarDeclMeth ::= Type NewVarDecl OptionalVarDeclListMeth SEMICOLON 
            {
              VarDeclMeth RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		NewVarDecl N2 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalVarDeclListMeth O3 = (OptionalVarDeclListMeth)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new VarDeclMeth(T1, N2, O3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*VarDeclMeth*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // OptionalVarDeclListStatic ::= 
            {
              OptionalVarDeclListStatic RESULT = null;
		 RESULT=new NoOptionalVarListStatic(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*OptionalVarDeclListStatic*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // OptionalVarDeclListStatic ::= OptionalVarDeclListStatic COMMA NewVarDecl 
            {
              OptionalVarDeclListStatic RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalVarDeclListStatic O1 = (OptionalVarDeclListStatic)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		NewVarDecl N2 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptionalVarListStatic(O1, N2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*OptionalVarDeclListStatic*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // VarDeclStatic ::= Type NewVarDecl OptionalVarDeclListStatic SEMICOLON 
            {
              VarDeclStatic RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		NewVarDecl N2 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalVarDeclListStatic O3 = (OptionalVarDeclListStatic)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new VarDeclStatic(T1, N2, O3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*VarDeclStatic*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // OptionalVarDeclListClass ::= 
            {
              OptionalVarDeclListClass RESULT = null;
		 RESULT=new NoOptionalVarListClass(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*OptionalVarDeclListClass*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // OptionalVarDeclListClass ::= OptionalVarDeclListClass COMMA NewVarDecl 
            {
              OptionalVarDeclListClass RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalVarDeclListClass O1 = (OptionalVarDeclListClass)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		NewVarDecl N2 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptionalVarListClass(O1, N2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*OptionalVarDeclListClass*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // VarDeclClass ::= Type NewVarDecl OptionalVarDeclListClass SEMICOLON 
            {
              VarDeclClass RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		NewVarDecl N2 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalVarDeclListClass O3 = (OptionalVarDeclListClass)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new VarDeclClass(T1, N2, O3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*VarDeclClass*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // OptionalMethVarDeclL ::= 
            {
              OptionalMethVarDeclL RESULT = null;
		 RESULT=new NoOptMethVarDclL(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*OptionalMethVarDeclL*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // OptionalMethVarDeclL ::= OptionalMethVarDeclL VarDeclMeth 
            {
              OptionalMethVarDeclL RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalMethVarDeclL O1 = (OptionalMethVarDeclL)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDeclMeth V2 = (VarDeclMeth)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptMethVarDclL(O1, V2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*OptionalMethVarDeclL*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // OptionalVarDeclList ::= 
            {
              OptionalVarDeclList RESULT = null;
		 RESULT=new NoOptionalVarList(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*OptionalVarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // OptionalVarDeclList ::= OptionalVarDeclList COMMA NewVarDecl 
            {
              OptionalVarDeclList RESULT = null;
		int O1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int O1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		OptionalVarDeclList O1 = (OptionalVarDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		NewVarDecl N2 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptionalVarList(O1, N2); RESULT.setLine(O1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*OptionalVarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // AdditionalSquare ::= 
            {
              AdditionalSquare RESULT = null;
		 RESULT=new NoAdditionalS(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(88/*AdditionalSquare*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // AdditionalSquare ::= LSQUARE RSQUARE 
            {
              AdditionalSquare RESULT = null;
		 RESULT=new AdditionalS(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(88/*AdditionalSquare*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NewVarDecl ::= IDENT AdditionalSquare 
            {
              NewVarDecl RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		AdditionalSquare A1 = (AdditionalSquare)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeclIdent(name, A1); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*NewVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // VarDecl ::= Type NewVarDecl OptionalVarDeclList SEMICOLON 
            {
              VarDecl RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		NewVarDecl N2 = (NewVarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int O3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int O3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		OptionalVarDeclList O3 = (OptionalVarDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new VarDecl(T1, N2, O3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ConstType ::= BOOLCONST 
            {
              ConstType RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Boolean val = (Boolean)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstBool(val); RESULT.setLine(valleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(107/*ConstType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ConstType ::= CHARCONST 
            {
              ConstType RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Character val = (Character)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstChar(val); RESULT.setLine(valleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(107/*ConstType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ConstType ::= NUMCONST 
            {
              ConstType RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstNum(val); RESULT.setLine(valleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(107/*ConstType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ConstDeclHead ::= IDENT EQUALS ConstType 
            {
              ConstDeclHead RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstType C1 = (ConstType)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeclHead(name, C1); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*ConstDeclHead*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ConstDeclTail ::= 
            {
              ConstDeclTail RESULT = null;
		 RESULT=new ConstDeclH(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ConstDeclTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ConstDeclTail ::= ConstDeclTail COMMA ConstDeclHead 
            {
              ConstDeclTail RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ConstDeclTail C1 = (ConstDeclTail)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstDeclHead C2 = (ConstDeclHead)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeclT(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ConstDeclTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ConstDecl ::= CONST Type IDENT EQUALS ConstType ConstDeclTail SEMICOLON 
            {
              ConstDecl RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ConstType C2 = (ConstType)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ConstDeclTail C3 = (ConstDeclTail)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ConstDecl(T1, name, C2, C3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ConstDeclList ::= 
            {
              ConstDeclList RESULT = null;
		 RESULT=new NoConstDeclL(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ConstDeclList ::= ConstDeclList ClassDecl 
            {
              ConstDeclList RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ConstDeclList C1 = (ConstDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ClassDecl C2 = (ClassDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassDeclL(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ConstDeclList ::= ConstDeclList VarDecl 
            {
              ConstDeclList RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ConstDeclList C1 = (ConstDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDecl V2 = (VarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeclL(C1, V2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ConstDeclList ::= ConstDeclList ConstDecl 
            {
              ConstDeclList RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ConstDeclList C1 = (ConstDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstDecl C2 = (ConstDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeclL(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Namespace ::= NamespaceBegin LBRACE ConstDeclList LBRACE MethodDeclList RBRACE RBRACE 
            {
              Namespace RESULT = null;
		int N1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int N1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		NamespaceBegin N1 = (NamespaceBegin)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		ConstDeclList C2 = (ConstDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int M3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int M3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		MethodDeclList M3 = (MethodDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new Namespace(N1, C2, M3); RESULT.setLine(N1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Namespace*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // NamespaceBegin ::= NAMESPACE IDENT 
            {
              NamespaceBegin RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NamespaceBegin(name); RESULT.setLine(nameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(98/*NamespaceBegin*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // NamespaceList ::= 
            {
              NamespaceList RESULT = null;
		 RESULT=new NoNameSpaceL(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*NamespaceList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // NamespaceList ::= NamespaceList Namespace 
            {
              NamespaceList RESULT = null;
		int N1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int N1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		NamespaceList N1 = (NamespaceList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Namespace N2 = (Namespace)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NameSpaceL(N1, N2); RESULT.setLine(N1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*NamespaceList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ProgName ::= IDENT 
            {
              ProgName RESULT = null;
		int progNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int progNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String progName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ProgName(progName); RESULT.setLine(progNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(86/*ProgName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              SyntaxNode RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Program start_val = (Program)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		RESULT = start_val;
              CUP$MJParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MJParser$parser.done_parsing();
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= PROGRAM ProgName NamespaceList ConstDeclList LBRACE MethodDeclList RBRACE 
            {
              Program RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		ProgName p = (ProgName)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int N1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int N1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		NamespaceList N1 = (NamespaceList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		ConstDeclList C2 = (ConstDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int M3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclList M3 = (MethodDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new Program(p, N1, C2, M3); RESULT.setLine(pleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(87/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

