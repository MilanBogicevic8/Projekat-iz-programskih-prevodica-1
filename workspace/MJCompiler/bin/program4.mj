program p
class Table {
	int pos[], neg[], factor;
{
	void setfactor(int factor) {factor = factor;}
	
 	int getp (int idx) { return pos[idx]; }
 	int getn (int idx) { return neg[idx]; }
}
}
Table val;
int rows, columns;
{
	void f(char ch, int a, int arg)
	int x; 
	{
		x = arg;
	}
void main() int x, i; char c;
{
	val = new Table();
	//a.b.c.d=0;
	val.setfactor(2);
	arr = new int[3];
	for (i=0; i<3; i++) {
		arr[i] = i;
	}
	for (i=0; i<3; i++) print(arr[i]);
	val.pos = new int [tableSize];
	val.neg = new int [tableSize];
	read(x);
	
	[i,,*x] = arr;
	for (;i< sizes::tableSize; i++) {
		val.putp(0, i);
 		val.putn(0, i);
	}
	f(c, x, i);
	read(rows);
	x =rows;
	for (;;){
 		if(x <= 0) break;
 		if (0 <= x && x < sizes::tableSize)
		{
			val.putp(val.getp(x)+1);
		}
		else if (-tableSize < x && x < 0)
 		{
			val.putn(val.getn(-x)+1);
 		}
		read(x);
 	}
  }
}