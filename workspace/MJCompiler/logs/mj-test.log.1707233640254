INFO  16:22:35,390 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  16:22:35,504 - #2 program
INFO  16:22:35,505 - #50 test_303
INFO  16:22:35,505 - #18 namespace
INFO  16:22:35,517 - #50 Predmeti
INFO  16:22:35,518 - #43 {
INFO  16:22:35,520 - #4 class
INFO  16:22:35,522 - #50 Predmet
INFO  16:22:35,523 - #43 {
INFO  16:22:35,526 - #50 int
INFO  16:22:35,530 - #50 tezina
INFO  16:22:35,531 - #35 ;
INFO  16:22:35,536 - #50 char
INFO  16:22:35,540 - #50 vrsta
INFO  16:22:35,540 - #35 ;
INFO  16:22:35,541 - #43 {
INFO  16:22:35,543 - #12 void
INFO  16:22:35,545 - #50 postaviTezinu
INFO  16:22:35,546 - #39 (
INFO  16:22:35,547 - #50 int
INFO  16:22:35,547 - #50 tezina
INFO  16:22:35,548 - #40 )
INFO  16:22:35,551 - #43 {
INFO  16:22:35,553 - #50 tezina
INFO  16:22:35,556 - #32 =
INFO  16:22:35,560 - #50 tezina
INFO  16:22:35,564 - #35 ;
INFO  16:22:35,573 - #44 }
INFO  16:22:35,574 - #12 void
INFO  16:22:35,575 - #50 ucitajTezinu
INFO  16:22:35,576 - #39 (
INFO  16:22:35,576 - #40 )
INFO  16:22:35,578 - #43 {
INFO  16:22:35,578 - #10 read
INFO  16:22:35,578 - #39 (
INFO  16:22:35,579 - #50 tezina
INFO  16:22:35,579 - #40 )
INFO  16:22:35,579 - #35 ;
INFO  16:22:35,579 - #44 }
INFO  16:22:35,579 - #50 int
INFO  16:22:35,580 - #50 zapremina
INFO  16:22:35,580 - #39 (
INFO  16:22:35,580 - #40 )
INFO  16:22:35,581 - #43 {
INFO  16:22:35,581 - #11 return
INFO  16:22:35,581 - #49 0
INFO  16:22:35,582 - #35 ;
INFO  16:22:35,582 - #44 }
INFO  16:22:35,583 - #50 int
INFO  16:22:35,584 - #50 Q
INFO  16:22:35,584 - #39 (
INFO  16:22:35,584 - #40 )
INFO  16:22:35,584 - #43 {
INFO  16:22:35,585 - #11 return
INFO  16:22:35,585 - #50 zapremina
INFO  16:22:35,585 - #39 (
INFO  16:22:35,587 - #40 )
INFO  16:22:35,589 - #21 *
INFO  16:22:35,589 - #50 tezina
INFO  16:22:35,592 - #35 ;
INFO  16:22:35,592 - #44 }
INFO  16:22:35,593 - #12 void
INFO  16:22:35,593 - #50 postaviVrstu
INFO  16:22:35,593 - #39 (
INFO  16:22:35,594 - #50 char
INFO  16:22:35,594 - #50 vrsta
INFO  16:22:35,595 - #40 )
INFO  16:22:35,595 - #43 {
INFO  16:22:35,595 - #50 vrsta
INFO  16:22:35,596 - #32 =
INFO  16:22:35,596 - #50 vrsta
INFO  16:22:35,596 - #35 ;
INFO  16:22:35,597 - #44 }
INFO  16:22:35,597 - #50 char
INFO  16:22:35,597 - #50 dohvVrstu
INFO  16:22:35,597 - #39 (
INFO  16:22:35,597 - #40 )
INFO  16:22:35,598 - #43 {
INFO  16:22:35,598 - #11 return
INFO  16:22:35,598 - #50 vrsta
INFO  16:22:35,598 - #35 ;
INFO  16:22:35,599 - #44 }
INFO  16:22:35,599 - #50 int
INFO  16:22:35,599 - #50 dohvTezinu
INFO  16:22:35,599 - #39 (
INFO  16:22:35,600 - #40 )
INFO  16:22:35,600 - #43 {
INFO  16:22:35,600 - #11 return
INFO  16:22:35,600 - #50 tezina
INFO  16:22:35,600 - #35 ;
INFO  16:22:35,601 - #44 }
INFO  16:22:35,601 - #12 void
INFO  16:22:35,602 - #50 ispisi
INFO  16:22:35,603 - #39 (
INFO  16:22:35,603 - #40 )
INFO  16:22:35,604 - #43 {
INFO  16:22:35,605 - #9 print
INFO  16:22:35,606 - #39 (
INFO  16:22:35,606 - #50 vrsta
INFO  16:22:35,606 - #40 )
INFO  16:22:35,608 - #35 ;
INFO  16:22:35,608 - #9 print
INFO  16:22:35,609 - #39 (
INFO  16:22:35,609 - #50 Q
INFO  16:22:35,610 - #39 (
INFO  16:22:35,610 - #40 )
INFO  16:22:35,610 - #40 )
INFO  16:22:35,610 - #35 ;
INFO  16:22:35,610 - #44 }
INFO  16:22:35,610 - #44 }
INFO  16:22:35,611 - #44 }
INFO  16:22:35,613 - #4 class
INFO  16:22:35,614 - #50 Sfera
INFO  16:22:35,614 - #13 extends
INFO  16:22:35,614 - #50 Predmet
INFO  16:22:35,614 - #43 {
INFO  16:22:35,614 - #50 int
INFO  16:22:35,614 - #50 r
INFO  16:22:35,615 - #35 ;
INFO  16:22:35,616 - #43 {
INFO  16:22:35,616 - #12 void
INFO  16:22:35,616 - #50 postaviPoluprecnik
INFO  16:22:35,616 - #39 (
INFO  16:22:35,616 - #50 int
INFO  16:22:35,617 - #50 r
INFO  16:22:35,617 - #40 )
INFO  16:22:35,617 - #43 {
INFO  16:22:35,618 - #50 r
INFO  16:22:35,618 - #32 =
INFO  16:22:35,618 - #50 r
INFO  16:22:35,618 - #35 ;
INFO  16:22:35,619 - #44 }
INFO  16:22:35,619 - #50 int
INFO  16:22:35,619 - #50 zapremina
INFO  16:22:35,620 - #39 (
INFO  16:22:35,620 - #40 )
INFO  16:22:35,620 - #50 int
INFO  16:22:35,621 - #50 z
INFO  16:22:35,621 - #35 ;
INFO  16:22:35,635 - #43 {
INFO  16:22:35,639 - #50 z
INFO  16:22:35,639 - #32 =
INFO  16:22:35,640 - #50 cinilac
INFO  16:22:35,640 - #35 ;
INFO  16:22:35,640 - #11 return
INFO  16:22:35,641 - #50 z
INFO  16:22:35,641 - #21 *
INFO  16:22:35,642 - #39 (
INFO  16:22:35,642 - #50 r
INFO  16:22:35,642 - #22 /
INFO  16:22:35,642 - #50 delilac
INFO  16:22:35,645 - #40 )
INFO  16:22:35,645 - #35 ;
INFO  16:22:35,645 - #44 }
INFO  16:22:35,646 - #44 }
INFO  16:22:35,646 - #44 }
INFO  16:22:35,646 - #4 class
INFO  16:22:35,646 - #50 Kvadar
INFO  16:22:35,646 - #13 extends
INFO  16:22:35,646 - #50 Predmet
INFO  16:22:35,647 - #43 {
INFO  16:22:35,647 - #50 int
INFO  16:22:35,647 - #50 a
INFO  16:22:35,647 - #37 ,
INFO  16:22:35,647 - #50 b
INFO  16:22:35,647 - #37 ,
INFO  16:22:35,648 - #50 c
INFO  16:22:35,648 - #35 ;
INFO  16:22:35,649 - #43 {
INFO  16:22:35,649 - #12 void
INFO  16:22:35,649 - #50 postaviStranice
INFO  16:22:35,649 - #39 (
INFO  16:22:35,649 - #50 int
INFO  16:22:35,649 - #50 a
INFO  16:22:35,650 - #37 ,
INFO  16:22:35,650 - #50 int
INFO  16:22:35,650 - #50 b
INFO  16:22:35,650 - #37 ,
INFO  16:22:35,650 - #50 int
INFO  16:22:35,651 - #50 c
INFO  16:22:35,651 - #40 )
INFO  16:22:35,651 - #43 {
INFO  16:22:35,652 - #50 a
INFO  16:22:35,652 - #32 =
INFO  16:22:35,652 - #50 a
INFO  16:22:35,652 - #35 ;
INFO  16:22:35,653 - #50 b
INFO  16:22:35,653 - #32 =
INFO  16:22:35,653 - #50 b
INFO  16:22:35,653 - #35 ;
INFO  16:22:35,654 - #50 c
INFO  16:22:35,655 - #32 =
INFO  16:22:35,655 - #50 c
INFO  16:22:35,655 - #35 ;
INFO  16:22:35,655 - #44 }
INFO  16:22:35,655 - #50 int
INFO  16:22:35,655 - #50 zapremina
INFO  16:22:35,655 - #39 (
INFO  16:22:35,655 - #40 )
INFO  16:22:35,655 - #50 int
INFO  16:22:35,655 - #50 z
INFO  16:22:35,656 - #35 ;
INFO  16:22:35,656 - #43 {
INFO  16:22:35,656 - #50 z
INFO  16:22:35,656 - #32 =
INFO  16:22:35,656 - #50 a
INFO  16:22:35,656 - #21 *
INFO  16:22:35,656 - #50 b
INFO  16:22:35,656 - #21 *
INFO  16:22:35,657 - #50 c
INFO  16:22:35,657 - #35 ;
INFO  16:22:35,657 - #11 return
INFO  16:22:35,657 - #50 z
INFO  16:22:35,657 - #35 ;
INFO  16:22:35,657 - #44 }
INFO  16:22:35,658 - #44 }
INFO  16:22:35,658 - #44 }
INFO  16:22:35,658 - #43 {
INFO  16:22:35,658 - #44 }
INFO  16:22:35,659 - #44 }
INFO  16:22:35,660 - #6 const
INFO  16:22:35,661 - #50 int
INFO  16:22:35,662 - #50 cinilac
INFO  16:22:35,662 - #32 =
INFO  16:22:35,662 - #49 4
INFO  16:22:35,662 - #37 ,
INFO  16:22:35,665 - #50 delilac
INFO  16:22:35,665 - #32 =
INFO  16:22:35,665 - #49 3
INFO  16:22:35,665 - #35 ;
INFO  16:22:35,669 - #4 class
INFO  16:22:35,672 - #50 ProstiBrojevi
INFO  16:22:35,673 - #43 {
INFO  16:22:35,673 - #17 static
INFO  16:22:35,673 - #50 int
INFO  16:22:35,674 - #50 prosti
INFO  16:22:35,674 - #41 [
INFO  16:22:35,675 - #42 ]
INFO  16:22:35,675 - #35 ;
INFO  16:22:35,678 - #17 static
INFO  16:22:35,681 - #50 int
INFO  16:22:35,681 - #50 X
INFO  16:22:35,681 - #37 ,
INFO  16:22:35,681 - #50 i
INFO  16:22:35,682 - #37 ,
INFO  16:22:35,682 - #50 j
INFO  16:22:35,682 - #35 ;
INFO  16:22:35,682 - #17 static
INFO  16:22:35,682 - #50 bool
INFO  16:22:35,683 - #50 flag
INFO  16:22:35,683 - #35 ;
INFO  16:22:35,683 - #17 static
INFO  16:22:35,683 - #43 {
INFO  16:22:35,683 - #9 print
INFO  16:22:35,683 - #39 (
INFO  16:22:35,684 - #52 s
INFO  16:22:35,684 - #40 )
INFO  16:22:35,685 - #35 ;
INFO  16:22:35,685 - #9 print
INFO  16:22:35,686 - #39 (
INFO  16:22:35,686 - #52 t
INFO  16:22:35,686 - #40 )
INFO  16:22:35,686 - #35 ;
INFO  16:22:35,687 - #9 print
INFO  16:22:35,687 - #39 (
INFO  16:22:35,687 - #52 a
INFO  16:22:35,687 - #40 )
INFO  16:22:35,687 - #35 ;
INFO  16:22:35,687 - #9 print
INFO  16:22:35,687 - #39 (
INFO  16:22:35,688 - #52 t
INFO  16:22:35,688 - #40 )
INFO  16:22:35,688 - #35 ;
INFO  16:22:35,688 - #9 print
INFO  16:22:35,688 - #39 (
INFO  16:22:35,689 - #52 i
INFO  16:22:35,689 - #40 )
INFO  16:22:35,689 - #35 ;
INFO  16:22:35,689 - #9 print
INFO  16:22:35,689 - #39 (
INFO  16:22:35,689 - #52 c
INFO  16:22:35,690 - #40 )
INFO  16:22:35,690 - #35 ;
INFO  16:22:35,690 - #9 print
INFO  16:22:35,690 - #39 (
INFO  16:22:35,690 - #50 eol
INFO  16:22:35,690 - #40 )
INFO  16:22:35,690 - #35 ;
INFO  16:22:35,691 - #50 prosti
INFO  16:22:35,691 - #32 =
INFO  16:22:35,691 - #8 new
INFO  16:22:35,691 - #50 int
INFO  16:22:35,691 - #41 [
INFO  16:22:35,693 - #49 10
INFO  16:22:35,693 - #42 ]
INFO  16:22:35,693 - #35 ;
INFO  16:22:35,694 - #16 for
INFO  16:22:35,694 - #39 (
INFO  16:22:35,696 - #50 X
INFO  16:22:35,698 - #32 =
INFO  16:22:35,698 - #49 0
INFO  16:22:35,698 - #37 ,
INFO  16:22:35,700 - #50 i
INFO  16:22:35,701 - #32 =
INFO  16:22:35,701 - #49 2
INFO  16:22:35,701 - #35 ;
INFO  16:22:35,704 - #50 X
INFO  16:22:35,704 - #28 <
INFO  16:22:35,704 - #49 10
INFO  16:22:35,709 - #35 ;
INFO  16:22:35,714 - #50 i
INFO  16:22:35,714 - #33 ++
INFO  16:22:35,714 - #40 )
INFO  16:22:35,720 - #43 {
INFO  16:22:35,722 - #50 flag
INFO  16:22:35,722 - #32 =
INFO  16:22:35,723 - #51 true
INFO  16:22:35,723 - #35 ;
INFO  16:22:35,723 - #16 for
INFO  16:22:35,724 - #39 (
INFO  16:22:35,724 - #50 j
INFO  16:22:35,724 - #32 =
INFO  16:22:35,724 - #49 2
INFO  16:22:35,724 - #35 ;
INFO  16:22:35,724 - #50 j
INFO  16:22:35,725 - #28 <
INFO  16:22:35,725 - #50 i
INFO  16:22:35,725 - #35 ;
INFO  16:22:35,725 - #50 j
INFO  16:22:35,725 - #33 ++
INFO  16:22:35,726 - #40 )
INFO  16:22:35,726 - #43 {
INFO  16:22:35,726 - #7 if
INFO  16:22:35,726 - #39 (
INFO  16:22:35,726 - #50 i
INFO  16:22:35,728 - #23 %
INFO  16:22:35,728 - #50 j
INFO  16:22:35,730 - #24 ==
INFO  16:22:35,731 - #49 0
INFO  16:22:35,732 - #40 )
INFO  16:22:35,742 - #43 {
INFO  16:22:35,742 - #50 flag
INFO  16:22:35,743 - #32 =
INFO  16:22:35,743 - #51 false
INFO  16:22:35,743 - #35 ;
INFO  16:22:35,743 - #3 break
INFO  16:22:35,743 - #35 ;
INFO  16:22:35,743 - #44 }
INFO  16:22:35,745 - #44 }
INFO  16:22:35,746 - #7 if
INFO  16:22:35,749 - #39 (
INFO  16:22:35,749 - #50 flag
INFO  16:22:35,749 - #40 )
INFO  16:22:35,751 - #43 {
INFO  16:22:35,751 - #50 prosti
INFO  16:22:35,751 - #41 [
INFO  16:22:35,753 - #50 X
INFO  16:22:35,754 - #42 ]
INFO  16:22:35,755 - #32 =
INFO  16:22:35,757 - #50 i
INFO  16:22:35,757 - #35 ;
INFO  16:22:35,757 - #50 X
INFO  16:22:35,758 - #33 ++
INFO  16:22:35,758 - #35 ;
INFO  16:22:35,758 - #44 }
INFO  16:22:35,759 - #44 }
INFO  16:22:35,759 - #44 }
INFO  16:22:35,759 - #44 }
INFO  16:22:35,761 - #50 int
INFO  16:22:35,762 - #50 zapreminaK
INFO  16:22:35,762 - #37 ,
INFO  16:22:35,763 - #50 zapreminaS
INFO  16:22:35,763 - #35 ;
INFO  16:22:35,764 - #50 int
INFO  16:22:35,767 - #50 tezinaK
INFO  16:22:35,768 - #37 ,
INFO  16:22:35,768 - #50 tezinaS
INFO  16:22:35,768 - #35 ;
INFO  16:22:35,768 - #43 {
INFO  16:22:35,768 - #12 void
INFO  16:22:35,768 - #50 ispis
INFO  16:22:35,769 - #39 (
INFO  16:22:35,769 - #50 Predmeti
INFO  16:22:35,770 - #36 :
INFO  16:22:35,770 - #36 :
INFO  16:22:35,771 - #50 Predmet
INFO  16:22:35,771 - #50 p
INFO  16:22:35,772 - #40 )
INFO  16:22:35,772 - #43 {
INFO  16:22:35,773 - #50 p
INFO  16:22:35,773 - #38 .
INFO  16:22:35,773 - #50 ispisi
ERROR 16:22:35,774 - 
Sintaksna greska na liniji 97
ERROR 16:22:35,774 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 97
