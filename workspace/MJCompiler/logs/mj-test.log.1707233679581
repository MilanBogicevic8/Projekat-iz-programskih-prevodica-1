INFO  16:34:00,258 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  16:34:00,308 - #2 program
INFO  16:34:00,308 - #50 test_303
INFO  16:34:00,308 - #18 namespace
INFO  16:34:00,310 - #50 Predmeti
INFO  16:34:00,310 - #43 {
INFO  16:34:00,311 - #4 class
INFO  16:34:00,311 - #50 Predmet
INFO  16:34:00,312 - #43 {
INFO  16:34:00,313 - #50 int
INFO  16:34:00,314 - #50 tezina
INFO  16:34:00,315 - #35 ;
INFO  16:34:00,317 - #50 char
INFO  16:34:00,318 - #50 vrsta
INFO  16:34:00,318 - #35 ;
INFO  16:34:00,319 - #43 {
INFO  16:34:00,319 - #12 void
INFO  16:34:00,320 - #50 postaviTezinu
INFO  16:34:00,320 - #39 (
INFO  16:34:00,320 - #50 int
INFO  16:34:00,320 - #50 tezina
INFO  16:34:00,321 - #40 )
INFO  16:34:00,324 - #43 {
INFO  16:34:00,325 - #50 tezina
INFO  16:34:00,326 - #32 =
INFO  16:34:00,327 - #50 tezina
INFO  16:34:00,328 - #35 ;
INFO  16:34:00,329 - #44 }
INFO  16:34:00,331 - #12 void
INFO  16:34:00,331 - #50 ucitajTezinu
INFO  16:34:00,331 - #39 (
INFO  16:34:00,331 - #40 )
INFO  16:34:00,332 - #43 {
INFO  16:34:00,332 - #10 read
INFO  16:34:00,332 - #39 (
INFO  16:34:00,332 - #50 tezina
INFO  16:34:00,332 - #40 )
INFO  16:34:00,332 - #35 ;
INFO  16:34:00,332 - #44 }
INFO  16:34:00,332 - #50 int
INFO  16:34:00,332 - #50 zapremina
INFO  16:34:00,332 - #39 (
INFO  16:34:00,332 - #40 )
INFO  16:34:00,332 - #43 {
INFO  16:34:00,332 - #11 return
INFO  16:34:00,333 - #49 0
INFO  16:34:00,333 - #35 ;
INFO  16:34:00,333 - #44 }
INFO  16:34:00,333 - #50 int
INFO  16:34:00,333 - #50 Q
INFO  16:34:00,333 - #39 (
INFO  16:34:00,333 - #40 )
INFO  16:34:00,333 - #43 {
INFO  16:34:00,333 - #11 return
INFO  16:34:00,334 - #50 zapremina
INFO  16:34:00,334 - #39 (
INFO  16:34:00,335 - #40 )
INFO  16:34:00,335 - #21 *
INFO  16:34:00,335 - #50 tezina
INFO  16:34:00,336 - #35 ;
INFO  16:34:00,336 - #44 }
INFO  16:34:00,336 - #12 void
INFO  16:34:00,337 - #50 postaviVrstu
INFO  16:34:00,337 - #39 (
INFO  16:34:00,337 - #50 char
INFO  16:34:00,337 - #50 vrsta
INFO  16:34:00,337 - #40 )
INFO  16:34:00,337 - #43 {
INFO  16:34:00,337 - #50 vrsta
INFO  16:34:00,337 - #32 =
INFO  16:34:00,337 - #50 vrsta
INFO  16:34:00,337 - #35 ;
INFO  16:34:00,338 - #44 }
INFO  16:34:00,338 - #50 char
INFO  16:34:00,338 - #50 dohvVrstu
INFO  16:34:00,338 - #39 (
INFO  16:34:00,338 - #40 )
INFO  16:34:00,338 - #43 {
INFO  16:34:00,338 - #11 return
INFO  16:34:00,338 - #50 vrsta
INFO  16:34:00,338 - #35 ;
INFO  16:34:00,338 - #44 }
INFO  16:34:00,339 - #50 int
INFO  16:34:00,339 - #50 dohvTezinu
INFO  16:34:00,339 - #39 (
INFO  16:34:00,339 - #40 )
INFO  16:34:00,339 - #43 {
INFO  16:34:00,339 - #11 return
INFO  16:34:00,339 - #50 tezina
INFO  16:34:00,339 - #35 ;
INFO  16:34:00,339 - #44 }
INFO  16:34:00,339 - #12 void
INFO  16:34:00,340 - #50 ispisi
INFO  16:34:00,340 - #39 (
INFO  16:34:00,340 - #40 )
INFO  16:34:00,340 - #43 {
INFO  16:34:00,340 - #9 print
INFO  16:34:00,340 - #39 (
INFO  16:34:00,340 - #50 vrsta
INFO  16:34:00,340 - #40 )
INFO  16:34:00,341 - #35 ;
INFO  16:34:00,341 - #9 print
INFO  16:34:00,341 - #39 (
INFO  16:34:00,342 - #50 Q
INFO  16:34:00,342 - #39 (
INFO  16:34:00,342 - #40 )
INFO  16:34:00,342 - #40 )
INFO  16:34:00,342 - #35 ;
INFO  16:34:00,342 - #44 }
INFO  16:34:00,342 - #44 }
INFO  16:34:00,342 - #44 }
INFO  16:34:00,342 - #4 class
INFO  16:34:00,343 - #50 Sfera
INFO  16:34:00,343 - #13 extends
INFO  16:34:00,343 - #50 Predmet
INFO  16:34:00,343 - #43 {
INFO  16:34:00,343 - #50 int
INFO  16:34:00,343 - #50 r
INFO  16:34:00,343 - #35 ;
INFO  16:34:00,343 - #43 {
INFO  16:34:00,343 - #12 void
INFO  16:34:00,343 - #50 postaviPoluprecnik
INFO  16:34:00,344 - #39 (
INFO  16:34:00,344 - #50 int
INFO  16:34:00,344 - #50 r
INFO  16:34:00,344 - #40 )
INFO  16:34:00,344 - #43 {
INFO  16:34:00,344 - #50 r
INFO  16:34:00,344 - #32 =
INFO  16:34:00,344 - #50 r
INFO  16:34:00,344 - #35 ;
INFO  16:34:00,344 - #44 }
INFO  16:34:00,344 - #50 int
INFO  16:34:00,344 - #50 zapremina
INFO  16:34:00,344 - #39 (
INFO  16:34:00,344 - #40 )
INFO  16:34:00,344 - #50 int
INFO  16:34:00,344 - #50 z
INFO  16:34:00,344 - #35 ;
INFO  16:34:00,345 - #43 {
INFO  16:34:00,346 - #50 z
INFO  16:34:00,346 - #32 =
INFO  16:34:00,346 - #50 cinilac
INFO  16:34:00,346 - #35 ;
INFO  16:34:00,346 - #11 return
INFO  16:34:00,346 - #50 z
INFO  16:34:00,346 - #21 *
INFO  16:34:00,346 - #39 (
INFO  16:34:00,346 - #50 r
INFO  16:34:00,346 - #22 /
INFO  16:34:00,346 - #50 delilac
INFO  16:34:00,346 - #40 )
INFO  16:34:00,346 - #35 ;
INFO  16:34:00,346 - #44 }
INFO  16:34:00,346 - #44 }
INFO  16:34:00,347 - #44 }
INFO  16:34:00,347 - #4 class
INFO  16:34:00,349 - #50 Kvadar
INFO  16:34:00,350 - #13 extends
INFO  16:34:00,350 - #50 Predmet
INFO  16:34:00,350 - #43 {
INFO  16:34:00,350 - #50 int
INFO  16:34:00,350 - #50 a
INFO  16:34:00,350 - #37 ,
INFO  16:34:00,350 - #50 b
INFO  16:34:00,350 - #37 ,
INFO  16:34:00,350 - #50 c
INFO  16:34:00,351 - #35 ;
INFO  16:34:00,351 - #43 {
INFO  16:34:00,351 - #12 void
INFO  16:34:00,351 - #50 postaviStranice
INFO  16:34:00,351 - #39 (
INFO  16:34:00,351 - #50 int
INFO  16:34:00,351 - #50 a
INFO  16:34:00,351 - #37 ,
INFO  16:34:00,351 - #50 int
INFO  16:34:00,351 - #50 b
INFO  16:34:00,351 - #37 ,
INFO  16:34:00,351 - #50 int
INFO  16:34:00,351 - #50 c
INFO  16:34:00,351 - #40 )
INFO  16:34:00,351 - #43 {
INFO  16:34:00,351 - #50 a
INFO  16:34:00,351 - #32 =
INFO  16:34:00,351 - #50 a
INFO  16:34:00,352 - #35 ;
INFO  16:34:00,352 - #50 b
INFO  16:34:00,352 - #32 =
INFO  16:34:00,352 - #50 b
INFO  16:34:00,352 - #35 ;
INFO  16:34:00,352 - #50 c
INFO  16:34:00,352 - #32 =
INFO  16:34:00,352 - #50 c
INFO  16:34:00,352 - #35 ;
INFO  16:34:00,352 - #44 }
INFO  16:34:00,352 - #50 int
INFO  16:34:00,352 - #50 zapremina
INFO  16:34:00,354 - #39 (
INFO  16:34:00,354 - #40 )
INFO  16:34:00,354 - #50 int
INFO  16:34:00,354 - #50 z
INFO  16:34:00,354 - #35 ;
INFO  16:34:00,354 - #43 {
INFO  16:34:00,354 - #50 z
INFO  16:34:00,354 - #32 =
INFO  16:34:00,354 - #50 a
INFO  16:34:00,354 - #21 *
INFO  16:34:00,354 - #50 b
INFO  16:34:00,354 - #21 *
INFO  16:34:00,354 - #50 c
INFO  16:34:00,354 - #35 ;
INFO  16:34:00,354 - #11 return
INFO  16:34:00,354 - #50 z
INFO  16:34:00,354 - #35 ;
INFO  16:34:00,354 - #44 }
INFO  16:34:00,355 - #44 }
INFO  16:34:00,355 - #44 }
INFO  16:34:00,355 - #43 {
INFO  16:34:00,355 - #44 }
INFO  16:34:00,356 - #44 }
INFO  16:34:00,357 - #6 const
INFO  16:34:00,357 - #50 int
INFO  16:34:00,357 - #50 cinilac
INFO  16:34:00,357 - #32 =
INFO  16:34:00,357 - #49 4
INFO  16:34:00,357 - #37 ,
INFO  16:34:00,358 - #50 delilac
INFO  16:34:00,358 - #32 =
INFO  16:34:00,358 - #49 3
INFO  16:34:00,358 - #35 ;
INFO  16:34:00,359 - #4 class
INFO  16:34:00,359 - #50 ProstiBrojevi
INFO  16:34:00,359 - #43 {
INFO  16:34:00,359 - #17 static
INFO  16:34:00,359 - #50 int
INFO  16:34:00,359 - #50 prosti
INFO  16:34:00,359 - #41 [
INFO  16:34:00,359 - #42 ]
INFO  16:34:00,360 - #35 ;
INFO  16:34:00,361 - #17 static
INFO  16:34:00,361 - #50 int
INFO  16:34:00,361 - #50 X
INFO  16:34:00,361 - #37 ,
INFO  16:34:00,361 - #50 i
INFO  16:34:00,362 - #37 ,
INFO  16:34:00,362 - #50 j
INFO  16:34:00,362 - #35 ;
INFO  16:34:00,362 - #17 static
INFO  16:34:00,362 - #50 bool
INFO  16:34:00,362 - #50 flag
INFO  16:34:00,362 - #35 ;
INFO  16:34:00,362 - #17 static
INFO  16:34:00,362 - #43 {
INFO  16:34:00,362 - #9 print
INFO  16:34:00,362 - #39 (
INFO  16:34:00,363 - #52 s
INFO  16:34:00,363 - #40 )
INFO  16:34:00,363 - #35 ;
INFO  16:34:00,363 - #9 print
INFO  16:34:00,363 - #39 (
INFO  16:34:00,363 - #52 t
INFO  16:34:00,363 - #40 )
INFO  16:34:00,364 - #35 ;
INFO  16:34:00,364 - #9 print
INFO  16:34:00,364 - #39 (
INFO  16:34:00,364 - #52 a
INFO  16:34:00,364 - #40 )
INFO  16:34:00,364 - #35 ;
INFO  16:34:00,364 - #9 print
INFO  16:34:00,364 - #39 (
INFO  16:34:00,364 - #52 t
INFO  16:34:00,364 - #40 )
INFO  16:34:00,364 - #35 ;
INFO  16:34:00,364 - #9 print
INFO  16:34:00,364 - #39 (
INFO  16:34:00,364 - #52 i
INFO  16:34:00,364 - #40 )
INFO  16:34:00,364 - #35 ;
INFO  16:34:00,364 - #9 print
INFO  16:34:00,364 - #39 (
INFO  16:34:00,364 - #52 c
INFO  16:34:00,364 - #40 )
INFO  16:34:00,365 - #35 ;
INFO  16:34:00,365 - #9 print
INFO  16:34:00,365 - #39 (
INFO  16:34:00,365 - #50 eol
INFO  16:34:00,365 - #40 )
INFO  16:34:00,365 - #35 ;
INFO  16:34:00,365 - #50 prosti
INFO  16:34:00,365 - #32 =
INFO  16:34:00,365 - #8 new
INFO  16:34:00,365 - #50 int
INFO  16:34:00,365 - #41 [
INFO  16:34:00,366 - #49 10
INFO  16:34:00,366 - #42 ]
INFO  16:34:00,366 - #35 ;
INFO  16:34:00,366 - #16 for
INFO  16:34:00,366 - #39 (
INFO  16:34:00,367 - #50 X
INFO  16:34:00,367 - #32 =
INFO  16:34:00,367 - #49 0
INFO  16:34:00,367 - #37 ,
INFO  16:34:00,369 - #50 i
INFO  16:34:00,369 - #32 =
INFO  16:34:00,369 - #49 2
INFO  16:34:00,369 - #35 ;
INFO  16:34:00,370 - #50 X
INFO  16:34:00,370 - #28 <
INFO  16:34:00,370 - #49 10
INFO  16:34:00,371 - #35 ;
INFO  16:34:00,373 - #50 i
INFO  16:34:00,373 - #33 ++
INFO  16:34:00,373 - #40 )
INFO  16:34:00,374 - #43 {
INFO  16:34:00,374 - #50 flag
INFO  16:34:00,374 - #32 =
INFO  16:34:00,374 - #51 true
INFO  16:34:00,374 - #35 ;
INFO  16:34:00,374 - #16 for
INFO  16:34:00,374 - #39 (
INFO  16:34:00,374 - #50 j
INFO  16:34:00,374 - #32 =
INFO  16:34:00,374 - #49 2
INFO  16:34:00,374 - #35 ;
INFO  16:34:00,375 - #50 j
INFO  16:34:00,375 - #28 <
INFO  16:34:00,375 - #50 i
INFO  16:34:00,375 - #35 ;
INFO  16:34:00,375 - #50 j
INFO  16:34:00,375 - #33 ++
INFO  16:34:00,375 - #40 )
INFO  16:34:00,375 - #43 {
INFO  16:34:00,375 - #7 if
INFO  16:34:00,375 - #39 (
INFO  16:34:00,375 - #50 i
INFO  16:34:00,376 - #23 %
INFO  16:34:00,376 - #50 j
INFO  16:34:00,377 - #24 ==
INFO  16:34:00,377 - #49 0
INFO  16:34:00,377 - #40 )
INFO  16:34:00,380 - #43 {
INFO  16:34:00,380 - #50 flag
INFO  16:34:00,380 - #32 =
INFO  16:34:00,380 - #51 false
INFO  16:34:00,380 - #35 ;
INFO  16:34:00,380 - #3 break
INFO  16:34:00,380 - #35 ;
INFO  16:34:00,380 - #44 }
INFO  16:34:00,380 - #44 }
INFO  16:34:00,381 - #7 if
INFO  16:34:00,381 - #39 (
INFO  16:34:00,381 - #50 flag
INFO  16:34:00,381 - #40 )
INFO  16:34:00,382 - #43 {
INFO  16:34:00,382 - #50 prosti
INFO  16:34:00,382 - #41 [
INFO  16:34:00,382 - #50 X
INFO  16:34:00,382 - #42 ]
INFO  16:34:00,382 - #32 =
INFO  16:34:00,383 - #50 i
INFO  16:34:00,383 - #35 ;
INFO  16:34:00,383 - #50 X
INFO  16:34:00,383 - #33 ++
INFO  16:34:00,383 - #35 ;
INFO  16:34:00,383 - #44 }
INFO  16:34:00,383 - #44 }
INFO  16:34:00,383 - #44 }
INFO  16:34:00,383 - #44 }
INFO  16:34:00,383 - #50 int
INFO  16:34:00,383 - #50 zapreminaK
INFO  16:34:00,383 - #37 ,
INFO  16:34:00,384 - #50 zapreminaS
INFO  16:34:00,384 - #35 ;
INFO  16:34:00,384 - #50 int
INFO  16:34:00,385 - #50 tezinaK
INFO  16:34:00,385 - #37 ,
INFO  16:34:00,385 - #50 tezinaS
INFO  16:34:00,385 - #35 ;
INFO  16:34:00,385 - #43 {
INFO  16:34:00,385 - #12 void
INFO  16:34:00,385 - #50 ispis
INFO  16:34:00,385 - #39 (
INFO  16:34:00,385 - #50 Predmeti
INFO  16:34:00,385 - #36 :
INFO  16:34:00,385 - #36 :
INFO  16:34:00,385 - #50 Predmet
INFO  16:34:00,385 - #50 p
INFO  16:34:00,385 - #40 )
INFO  16:34:00,385 - #43 {
INFO  16:34:00,385 - #50 p
INFO  16:34:00,385 - #38 .
INFO  16:34:00,385 - #50 ispisi
ERROR 16:34:00,385 - 
Sintaksna greska na liniji 97
ERROR 16:34:00,385 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 97
